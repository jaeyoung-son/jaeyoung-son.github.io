{"componentChunkName":"component---src-templates-blog-post-js","path":"/migration/2020-04-03---scss/","result":{"data":{"site":{"siteMetadata":{"title":"재영 블로그","author":"jaeyoung-son","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"1eee99e6-5468-59d4-a319-08c56b9e3a25","excerpt":"개발을 처음 시작하고 html을 배우고 css를 배웠다. 배우면서 html로 구조를 잡고 css로 그 구조에 스타일을 넣어준다는게 굉장히 신선하고 재밌었다. 그러다가 1차 프로젝트를 하며 scss를 적용했고 2차프로젝트에서 styled-component로 스타일링을 하였다. 그 후 스타일드컴포넌트가 편해서 쭉 스타일드컴포넌트를 사용했는데 scss는 상대적으로 사용도 많이 해보지않았고 부족한거같아 부족함을 채우기위해 정리를 하기로 하였다. scss CSS…","html":"<p>개발을 처음 시작하고 html을 배우고 css를 배웠다. 배우면서 html로 구조를 잡고 css로 그 구조에 스타일을 넣어준다는게 굉장히 신선하고 재밌었다. 그러다가 1차 프로젝트를 하며 scss를 적용했고 2차프로젝트에서 styled-component로 스타일링을 하였다. 그 후 스타일드컴포넌트가 편해서 쭉 스타일드컴포넌트를 사용했는데 scss는 상대적으로 사용도 많이 해보지않았고 부족한거같아 부족함을 채우기위해 정리를 하기로 하였다.</p>\n<h2 id=\"scss\" style=\"position:relative;\"><a href=\"#scss\" aria-label=\"scss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>scss</h2>\n<p>CSS는 작업이 고도화될수록 불편함도 커진다. 불필요한 선택자의 과용과 연산 기능의 한계등 프로젝트의 규모가 커질수록 아쉬운점이 커진다. 하지만 웹에서는 표준CSS만 작동한다.</p>\n<h3 id=\"css-전처리기preprocessor\" style=\"position:relative;\"><a href=\"#css-%EC%A0%84%EC%B2%98%EB%A6%AC%EA%B8%B0preprocessor\" aria-label=\"css 전처리기preprocessor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS 전처리기(Preprocessor)</h3>\n<p>말그대로 전처리기 CSS가 동작하기 전에 사용하는 기능으로, CSS의 불편함을 확장 기능으로 상쇄할 수 있다. Sass, Less등이 있다.<br>\nCSS는 불편한점이 있기에 일단 전처리기로 작성한다. 전처리기는 CSS문법과 굉장히 유사하지만 선택자의 중첩(nesting)이나 조건문, 반복문, 다양한 단위의 연산 등 표준 CSS보다 훨씬 많은 기능을 사용해서 편리하게 작성할 수 있다. 그렇기에 전처리기를 사용하는것! 하지만 웹에서는 직접 동작하는게 아니라 이렇게 작성한 전처리기를 웹에서 동작 가능한 표준의 CSS로 컴파일한다. 작성은 전처리기로 결국 동작은 CSS\n보통 전처리기 3대장으로 Less, Sass(SCSS), Stylus가 있다.\nSass(scss)는 나머지 두 가지의 전처리기의 장접을 모두 가지고 있으며 2006년부터 시작하여 가장 오래된 CSS확장 언어이며 그만큼 성숙도도 높다고한다.</p>\n<h3 id=\"그렇다면-sass-scss-차이는\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A0%87%EB%8B%A4%EB%A9%B4-sass-scss-%EC%B0%A8%EC%9D%B4%EB%8A%94\" aria-label=\"그렇다면 sass scss 차이는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그렇다면 Sass SCSS 차이는??</h3>\n<p>SCSS는 Sass의 3버전에서 새롭게 등장하였고 CSS구문과 완전히 호환되도록 새로운 구문을 도입해 만든 Sass의 모든 기능을 지원하는 CSS의 상위집합(Superset)이다.\n그 말은 SCSS는 CSS와 거의 같은 문법으로 Sass기능을 지원한다는 말<br>\n간단하게 눈에 보이는 차이라면 {}중괄호와 ;세미콜론의 유무</p>\n<h4 id=\"sass\" style=\"position:relative;\"><a href=\"#sass\" aria-label=\"sass permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sass</h4>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token selector\">.div</span>\n<span class=\"token property-line\">  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px</span>\n<span class=\"token property-line\">  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px</span>\n  <span class=\"token selector\">li</span>\n<span class=\"token property-line\">    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue</span></code></pre></div>\n<h4 id=\"scss-1\" style=\"position:relative;\"><a href=\"#scss-1\" aria-label=\"scss 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SCSS</h4>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.div </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n  <span class=\"token selector\">li </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Sass는 셀렉터의 유효범위를 들여쓰기로 구분하고 SCSS는 중괄호로 구분한다.<br>\nsass 와 scss가 처음에는 같은건줄 알았었는데 다른점이 분명히 있고 나는 scss를 사용했다.</p>\n<h3 id=\"scss의-문법들\" style=\"position:relative;\"><a href=\"#scss%EC%9D%98-%EB%AC%B8%EB%B2%95%EB%93%A4\" aria-label=\"scss의 문법들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SCSS의 문법들</h3>\n<ul>\n<li>\n<p>주석\nSCSS의 주석은 /_ … _/ 을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">/*\np {\nfont-size: 20px\n}\n*/</span></code></pre></div>\n</li>\n<li>\n<p>중첩(Nesting)\n상위 선택자의 반복을 피하고 좀 더 편리하게 복잡한 구조를 작성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.header </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token selector\">.list </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 코드가 결국 요렇게 컴파일이 된다</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.header</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.header .list</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>상위 선택자 참조(Ampersand)\n중첩 안에서 &#x26; 키워드는 상위(부모) 선택자를 참조하여 치환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.btn </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n<span class=\"token selector\"><span class=\"token parent important\">&amp;</span>.active </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>중첩 벗어나기(@at-root)\n중첩에서 벗어나고 싶을 때 @at-root 키워드를 사용. 중첩 안에서 생성하는데 중첩 밖에서 사용해야하는 경우에 유용하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.list </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\"><span class=\"token variable\">$w</span></span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token selector\">li </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$w</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@at-root</span> .box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$w</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>특정 변수를 범위 밖에서 사용할 수 없기 때문에 @at-root 키워드를 사용한다.</p>\n</li>\n<li>\n<p>중첩된 속성\nfont-, margin- 등과 같이 동일한 네임 스페이스를 가지는 속성들을 다음과 같이 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.box </span><span class=\"token punctuation\">{</span>\n<span class=\"token selector\">font: </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">size</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">margin: </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>변수\n반복적으로 사용되는 값을 변수로 지정할 수 있다. 변수 이름앞에는 항상 $를 붙인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token property\"><span class=\"token variable\">$my-color</span></span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n<span class=\"token property\"><span class=\"token variable\">$w</span></span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n\n<span class=\"token selector\">.box </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$w</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$my-color</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>중첩 벗어나기에서 설명했지만 변수는 사용 가능한 유효범위를 가진다. 선언된 블록 내에서만 유효범위를 가진다.<br>\n!global 를 사용하면 변수의 유효범위를 전역으로 설정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.box1 </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\"><span class=\"token variable\">$color</span></span><span class=\"token punctuation\">:</span> green !global<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.boxw </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$color</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>!default(초기값 설정)\n!default 는 할당되지 않은 변수의 초기값을 설정한다. 즉 할당되어있는 변수가 있다면 변수가 기존 할당 값을 사용함.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token property\"><span class=\"token variable\">$my-color</span></span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n\n<span class=\"token selector\">.box </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\"><span class=\"token variable\">$my-color</span></span><span class=\"token punctuation\">:</span> blue <span class=\"token statement keyword\">!default</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$my-color</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// red</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이미 존재한다면 덮어쓰기 하지 않는다는 뜻이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">// config.scss</span>\n<span class=\"token property\"><span class=\"token variable\">$my-color</span></span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">// main.scss</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">'config'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token property\"><span class=\"token variable\">$my-color</span></span><span class=\"token punctuation\">:</span> blue <span class=\"token statement keyword\">!default</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token selector\">.box </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$my-color</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// red</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>가져오기 (import)\n@import 로 외부에서 가져온 sass 파일은 모두 단일 CSS출력 파일로 병합된다. 또한 가져온 파일에 정의된 모든 변수 또는 Mixins 등을 주 파일에서 사용할 수 있다.<br>\nSass의 @import 는 기본적으로 Sass 파일을 가져오는데, CSS @import 규칙으로 컴파일되는 몇 가지 상황이 있다.</p>\n<ul>\n<li>파일 확장자가 .css일 때</li>\n<li>파일 이름이 <a href=\"http://%EB%A1%9C\">http://로</a> 시작하는 경우</li>\n<li>url()이 붙었을 경우</li>\n<li>미디어쿼리가 있는 경우</li>\n</ul>\n<p>위의 경우 CSS @import 규칙대로 컴파일 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token keyword\">@import</span> <span class=\"token string\">'hello.css'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">'hello'</span> screen<span class=\"token punctuation\">;</span></code></pre></div>\n<p>여러 파일 가져오기</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token keyword\">@import</span> <span class=\"token string\">'header'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'footer'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>파일 이름은 ,로 구분한다.</p>\n</li>\n<li>\n<p>연산\nSass는 기본적인 연산 기능을 제공한다. 어떤상황에? 레이아웃 작업 시 상황에 맞게 크기를 계산하거나 정해진 값을 나눠서 작성할 경우 유용.</p>\n<ul>\n<li>(-) 더하기</li>\n<li>(-) 빼기</li>\n<li>(*) 곱하기 (하나 이상의 값이 반드시 숫자)</li>\n<li>(/) 나누기 오른쪽 값이 반드시 숫자</li>\n<li>(%) 나머지</li>\n<li>(==) 동등</li>\n<li>(!=) 부등</li>\n<li>(&#x3C;) 대소</li>\n<li>(>) 대소</li>\n<li>(&#x3C;=) 대소 및 동등</li>\n<li>(>=) 대소 및 동등</li>\n<li>and 그리고</li>\n<li>or 또는</li>\n<li>not 부정</li>\n</ul>\n</li>\n<li>\n<p>숫자\n일반적으로 절댓값을 나타내는 px 단위로 연산을 한다. 상대적 단위(%,em,vw)의 경우 CSS calc()로 연산해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50% <span class=\"token operator\">-</span> 20px<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 단위 모순 에러</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">calc</span><span class=\"token punctuation\">(</span>50% = 20px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 가능</span></code></pre></div>\n<p>나누기의 경우 font: 16px / 22px serif; 같은 경우 font-size와 line-height의 속성 분리를 위해 /를 사용하기 때문에 사용하려면 조건을 충족해야한다.</p>\n<ul>\n<li>값 또는 그 일부가 변수에 저장되거나 함수에 의해 반환되는 경우</li>\n<li>값이 ()로 묶여있는 경우</li>\n<li>값이 다른 산술 표현식의 일부로 사용되는 경우</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">div </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\"><span class=\"token variable\">$x</span></span><span class=\"token punctuation\">:</span> 100px<span class=\"token punctuation\">;</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$x</span> <span class=\"token operator\">/</span> 2<span class=\"token punctuation\">;</span>\n<span class=\"token property\">heght</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>100px <span class=\"token operator\">/</span> 2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 10px <span class=\"token operator\">+</span> 12px <span class=\"token operator\">/</span> 3<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>문자\n문자 연산에는 +가 사용된다. 문자 연산의 결과는 첫 번째 피연산자를 기준으로 한다. 첫 번째 피연산자에 따옴표가 붙어있다면 연산 결과도 따옴표로 묶고 첫 번쨰 피연산자에 따옴표가 없다면 결과도 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">div::after </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello'</span> <span class=\"token operator\">+</span> World<span class=\"token punctuation\">;</span>\n<span class=\"token property\">flex-flow</span><span class=\"token punctuation\">:</span> row <span class=\"token operator\">+</span> <span class=\"token string\">'-reverse'</span> <span class=\"token operator\">+</span> <span class=\"token string\">' '</span> <span class=\"token operator\">+</span> wrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Compiled to</span>\n<span class=\"token selector\">div::after </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">flex-flow</span><span class=\"token punctuation\">:</span> row-reverse wrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>논리 연산</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token property\"><span class=\"token variable\">$width</span></span><span class=\"token punctuation\">:</span> 90px<span class=\"token punctuation\">;</span>\n<span class=\"token selector\">div </span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">@if</span> <span class=\"token function\">not</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$width</span> <span class=\"token operator\">></span> 100px<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// compiled to</span>\n<span class=\"token selector\">div </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">hegiht</span><span class=\"token punctuation\">:</span> 300px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>재활용(Mixins)\nSass의 Mixin은 스타일 시트 전체에서 재사용 할 CSS 선언 그룹을 정의하는 아주 훌륭한 기능! 약간의 믹스인으로 다양한 스타일을 만들어낼 수 있다.\n선언하기(@mixin)와 포함하기(@include)</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token keyword\">@mixin</span> <span class=\"token selector\">믹스인이름 </span><span class=\"token punctuation\">{</span>\n스타일<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">@include</span> 믹스인이름<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">@mixin</span> <span class=\"token selector\">text </span><span class=\"token punctuation\">{</span>\n<span class=\"token selector\">font: </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h1 </span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">@include</span> text<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>믹스인은 함수처럼 인수를 가질 수 있다. 따라서 하나의 믹스인으로 다양한 결과를 만들 수 있다 확장성!!</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token keyword\">@mixin</span> <span class=\"token function\">line</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$width</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$height</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$width</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\">height</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$height</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.box </span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">@include</span> <span class=\"token function\">line</span><span class=\"token punctuation\">(</span>50px<span class=\"token punctuation\">,</span> 20px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>확장 (Extend)\n특정 선택자가 다른 선택자의 모든 스타일을 가져야하는 경우 확장 기능을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token selector\">.btn </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.btn-other </span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">@extend</span> .btn<span class=\"token punctuation\">;</span>\n<span class=\"token property\">background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>조건문</p>\n<h4 id=\"if-함수\" style=\"position:relative;\"><a href=\"#if-%ED%95%A8%EC%88%98\" aria-label=\"if 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>if (함수)</h4>\n<p>조건의 값(true, false)에 따라 두 개의 표현식 중 하나만 반환한다.\n조건값이 true면 표현식1을 false이면 표현식2를 실행</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if(조건, 표현식1, 표현식2)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token property\"><span class=\"token variable\">$width</span></span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span>\n<span class=\"token selector\">div </span><span class=\"token punctuation\">{</span>\n<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token function\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$width</span> <span class=\"token operator\">></span> 300px<span class=\"token punctuation\">,</span> <span class=\"token variable\">$width</span><span class=\"token punctuation\">,</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"if-지시어\" style=\"position:relative;\"><a href=\"#if-%EC%A7%80%EC%8B%9C%EC%96%B4\" aria-label=\"if 지시어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@if (지시어)</h4>\n<p>@if 지시어는 조건에 따른 분기 처리가 가능하며 if문과 유사하다.\n같이 사용할 수 있는 지시어는 @else, if가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token keyword\">@if</span> <span class=\"token punctuation\">(</span>조건<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/* 참일때 실행 */</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">@else if</span> <span class=\"token punctuation\">(</span>조건2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/* 조건2가 참일때 실행 */</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">@else</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">/* 모두 거짓일때 실행 */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>조건에는 논리 연산자 and, or , not이 사용가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token keyword\">@if</span> <span class=\"token selector\"><span class=\"token variable\">$size</span> >= 0 and <span class=\"token variable\">$size</span> &lt;= 200px </span><span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>for 반복문\n@for 은 through를 사용하는 형식과 to를 사용하는 형식으로 나뉜다.</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">// through</span>\n<span class=\"token comment\">// 종료 만큼 반복</span>\n<span class=\"token keyword\">@for</span> $변수 <span class=\"token keyword\">from</span> 시작 <span class=\"token keyword\">through</span> <span class=\"token selector\">종료 </span><span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// 내용</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// to</span>\n<span class=\"token comment\">// 종료 직전까지 반복</span>\n<span class=\"token keyword\">@for</span> $변수 <span class=\"token keyword\">from</span> <span class=\"token selector\">시작 to 종료 </span><span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// 내용</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">// 1부터 3번 반복</span>\n<span class=\"token keyword\">@for</span> <span class=\"token variable\">$i</span> <span class=\"token keyword\">from</span> 1 <span class=\"token keyword\">through</span> <span class=\"token selector\">3 </span><span class=\"token punctuation\">{</span>\n.<span class=\"token property\">through</span><span class=\"token punctuation\">:</span><span class=\"token function\">nth-child</span><span class=\"token punctuation\">(</span><span class=\"token variable\">#{$i}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 20px <span class=\"token operator\">*</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>@each\n@each는 list와 map 데이터를 반복할 떄 사용한다. for in 문과 유사</p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token keyword\">@each</span> <span class=\"token selector\">$변수 In 데이터 </span><span class=\"token punctuation\">{</span>\n<span class=\"token comment\">//반복내용</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token property\"><span class=\"token variable\">$fruits</span></span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>apple<span class=\"token punctuation\">,</span> orange<span class=\"token punctuation\">,</span> banana<span class=\"token punctuation\">)</span> <span class=\"token selector\">.fruits </span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">@each</span> <span class=\"token selector\"><span class=\"token variable\">$fruit</span> in <span class=\"token variable\">$fruits</span> </span><span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">li.<span class=\"token variable\">#{$fruit}</span> </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/images/#{fruit}.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>헤로피님의 블로그를 참고하며 작성하였습니다.\n<a href=\"https://heropy.blog/2018/01/31/sass/\">https://heropy.blog/2018/01/31/sass/</a></p>\n</li>\n</ul>","frontmatter":{"title":"스타일링 정복기","date":"April 03, 2020"}}},"pageContext":{"slug":"/migration/2020-04-03---scss/","previous":{"fields":{"slug":"/migration/2020-04-02---function/"},"frontmatter":{"title":"자바스크립트 함수","category":"javascript","draft":false}},"next":{"fields":{"slug":"/migration/2020-04-10---test/"},"frontmatter":{"title":"테스팅","category":"test","draft":false}}}},"staticQueryHashes":["3128451518","3498048237"]}