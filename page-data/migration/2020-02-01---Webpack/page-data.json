{"componentChunkName":"component---src-templates-blog-post-js","path":"/migration/2020-02-01---Webpack/","result":{"data":{"site":{"siteMetadata":{"title":"재영 블로그","author":"jaeyoung-son","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"5949e27b-b7a2-5e5e-acb9-b8484fa2617a","excerpt":"웹팩 개념잡기 모듈 번들러 모듈 번들러란 여러개의 나누어져 있는 파일들을 하나의 파일로 만들어주는 라이브러리를 말한다.\n모듈 번들러 라이브러리는 웹팩(webpack), Parcel 등이 있다. 실습하기 프로젝트 설정하기 디렉터리 만든 후 초기화 필요한 라이브러리 설치 webpack.config.js 파일 작성\nentry는 웹팩이 빌드할 파일을 알려주는 역할\nsrc/test.js파일을 기준으로 import되어 있는 모든 파일들을 찾아 하나의 파일로 합친다.\noutput…","html":"<h2 id=\"웹팩-개념잡기\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%ED%8C%A9-%EA%B0%9C%EB%85%90%EC%9E%A1%EA%B8%B0\" aria-label=\"웹팩 개념잡기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹팩 개념잡기</h2>\n<h3 id=\"모듈-번들러\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%93%88-%EB%B2%88%EB%93%A4%EB%9F%AC\" aria-label=\"모듈 번들러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모듈 번들러</h3>\n<p>모듈 번들러란 여러개의 나누어져 있는 파일들을 하나의 파일로 만들어주는 라이브러리를 말한다.\n모듈 번들러 라이브러리는 웹팩(webpack), Parcel 등이 있다.</p>\n<h2 id=\"실습하기\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5%ED%95%98%EA%B8%B0\" aria-label=\"실습하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습하기</h2>\n<h3 id=\"프로젝트-설정하기\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"프로젝트 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 설정하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn init -y</code></pre></div>\n<p>디렉터리 만든 후 초기화</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add -D @babel/core @babel/preset-env @babel/preset-react babel-loader clean-webpack-plugin css-loader html-loader html-webpack-plugin mini-css-extract-plugin node-sass react react-dom sass-loader style-loader webpack webpack-cli webpack-dev-server</code></pre></div>\n<p>필요한 라이브러리 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/test.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'bundle.js'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">'/build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>webpack.config.js 파일 작성\nentry는 웹팩이 빌드할 파일을 알려주는 역할\nsrc/test.js파일을 기준으로 import되어 있는 모든 파일들을 찾아 하나의 파일로 합친다.\noutput은 웹팩에서 빌드를 완료하면 output에 명시되어 있는 정보를 통해 빌드 파일을 생선한다.\nmode는 웹팩 빌드 옵션이며 production은 최적화되어 빌드되어지는 특징을 가지고 있고 development는 빠르게 빌드하는 특징, none 같은 경우는 아무 기능 없이 웹팩으로 빌드한다.</p>\n<h3 id=\"웹팩으로-html-파일-빌드하기\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%ED%8C%A9%EC%9C%BC%EB%A1%9C-html-%ED%8C%8C%EC%9D%BC-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0\" aria-label=\"웹팩으로 html 파일 빌드하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹팩으로 HTML 파일 빌드하기</h3>\n<p>웹팩은 자바스크립트 파일뿐만 아니라 자바스크립트가 아닌 파일들도 모듈로 관리 할 수 있다. 로더라는 기능을 이용해서 자바스크립트가 아닌 파일도 웹팩이 이해할 수 있게 해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token string\">'가지고올 파일 정규식'</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                loader<span class=\"token operator\">:</span> <span class=\"token string\">'사용할 로더 이름'</span><span class=\"token punctuation\">,</span>\n                options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> 사용할 로더 옵션 <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>webpack.config.js</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> HtmlWebPackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">'./src/test.js'</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">'bundle.js'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">'/build'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.html$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            loader<span class=\"token operator\">:</span> <span class=\"token string\">'html-loader'</span><span class=\"token punctuation\">,</span>\n            options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> minimize<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebPackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'./public/index.html'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// public/index.html 파일을 읽는다.</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// output으로 출력할 파일은 index.html 이다.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>yarn build 명령어를 실행하면 build/index.html 파일이 생성 되어 있고 minimize옵션이 켜져 있어서 파일 내용이 한줄로 되어있다.</p>\n<h3 id=\"리액트-빌드하기\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0\" aria-label=\"리액트 빌드하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트 빌드하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"@babel/preset-react\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>최상위 디렉터리에서 .babelrc 파일을 만든 후 위와 같은 내용을 입력한다. 바벨은 최신 문법들을 브라우저가 이해할 수 있게 ES5로 자바스크립트를 변환해주는 역할을 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.(js|jsx)$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        exclude<span class=\"token operator\">:</span> <span class=\"token string\">\"/node_modules\"</span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>webpack.config.js 파일에 babel-loader 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">\t<span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>css 로더 추가\n이상태에서는 웹브라우저에 css가 적용이 안되어 있다. 웹팩에서 css파일을 읽은 후 어딘가에 저장을 해야하기 떄문이다. css를 index.html에 합치는 방법도 있고 파일을 추출하는 방법도 있다.\n여기 use에 있는 loader 순서는 오른쪽에서 왼쪽 순서로 실행된다. 위에 있는 코드의 의미는 css-loader로 css파일을 읽고 MiniCssExtractPlugin.loader로 읽은 css를 파일로 추출해낸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebPackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      template<span class=\"token operator\">:</span> <span class=\"token string\">'./public/index.html'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// public/index.html 파일을 읽는다.</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'index.html'</span> <span class=\"token comment\">// output으로 출력할 파일은 index.html 이다.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">MiniCssExtractPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      filename<span class=\"token operator\">:</span> <span class=\"token string\">'style.css'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>webpack.config.js에 플러그인 적용</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">\"./src/index.js\"</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"bundle.js\"</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname <span class=\"token operator\">+</span> <span class=\"token string\">\"/build\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    contentBase<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./build\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    index<span class=\"token operator\">:</span> <span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">9000</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>devServer 추가 소스코드를 수정할 때마다 직접 빌드하지 않고 알아서 웹팩이 빌드해주는 것</p>\n<h2 id=\"참고글\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EA%B8%80\" aria-label=\"참고글 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고글</h2>\n<p><a href=\"https://velog.io/@jeff0720/React-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD%EC%9D%84-%EA%B5%AC%EC%B6%95%ED%95%98%EB%A9%B4%EC%84%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-Webpack-%EA%B8%B0%EC%B4%88\">https://velog.io/@jeff0720/React-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD%EC%9D%84-%EA%B5%AC%EC%B6%95%ED%95%98%EB%A9%B4%EC%84%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-Webpack-%EA%B8%B0%EC%B4%88</a></p>","frontmatter":{"title":"WEbpack 설정","date":"February 01, 2020"}}},"pageContext":{"slug":"/migration/2020-02-01---Webpack/","previous":{"fields":{"slug":"/migration/2020-02-11--- saga/"},"frontmatter":{"title":"사가","category":"react","draft":false}},"next":{"fields":{"slug":"/migration/2020-02-02--- encryption/"},"frontmatter":{"title":"암호화","category":"encryption","draft":false}}}},"staticQueryHashes":["3128451518","3498048237"]}