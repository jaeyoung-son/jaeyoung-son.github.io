{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"재영 블로그","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"Vue를 접하며 처음 Vue를 접할 때 React와는 다른 Template문법, 양방향 바인딩 등으로 인해 많이 낯설게 느꼈지만, 3.0버전에서 추가된 composition API를 통해 React와 비슷하게 컴포넌트/비즈니스 로직을 분리하여 구조적으로 관리할 수 있게 되면서 구조적으로 관리하고 있습니다. 아직 Nuxt에서는 정식 런칭되지 않았고 nuxt…","fields":{"slug":"/react/2022-02-09---vue_react_compare/"},"frontmatter":{"date":"February 09, 2022","title":"Vue 3.0 공식 런칭, React Hook API와의 차이는?","category":"react","draft":false}}},{"node":{"excerpt":"프론트엔드 개발자의 업무효율을 개선시켜주는 스토리북, 그에 따른 디자인 시스템등 말로만 들어왔던 스토리북을 학습하며\n그 과정을 기록해 보려고합니다. 디자인 시스템을 이해하기 Style Guide\n스타일 가이드란 특정 브랜드 또는 상품에서 디자인을 할 때 지켜야 하는 규칙들로 이루어져 있습니다. 색상 아이콘 여백 타이포그래피 꼭 UI에만 해당하는 것은 아니…","fields":{"slug":"/storybook/2021-02-20-storybook/"},"frontmatter":{"date":"February 20, 2021","title":"스토리북","category":"storybook","draft":false}}},{"node":{"excerpt":"HTTP HTTP 란 Hyper Text Transper Protocol 입니다.\n하이퍼텍스트 문서를 교환하기 위해 만들어진 통신 규약입니다. 웹상에서 네트워크로 서버끼리 통신을 할때 어떤 형식으로 통신을 할지 규정해놓은 통신 형식, 통신 구조 입니다. HTTP 응답코드 종류 응답대역 응답코드 설명 정보전송 100 Continue 클라이언트로 부터 일부 …","fields":{"slug":"/http/2021-02-13---http_method/"},"frontmatter":{"date":"February 13, 2021","title":"HTTP 응답 코드와 메소드","category":"HTTP method","draft":false}}},{"node":{"excerpt":"GraphQL GraphQL 이란 Server API를 구성하기 위해 페이스북에서 만든 Query Language 입니다. Server API Server API란 요청을 하면 요청에 따른 응답을 주는 Endpoint(API가 서버에서 리소스에 접근할 수 있도록 가능하게 하는 URL, 주소)를 웹을 통해 노충하는것을 말합니다. 요청 ----> 응답 Ser…","fields":{"slug":"/api/2021-02-10-graphql/"},"frontmatter":{"date":"February 10, 2021","title":"GraphQL","category":"DNS","draft":false}}},{"node":{"excerpt":"브라우저 사용자가 연결된 주소의 서버에 데이터 요청을 하게 되면 서버로부터 데이터를 다운받은 것을 가지고 웹브라우저가\n그것을 해석해서 사용자가 보는 UI를 완성 해줍니다. 따라서 네트워크가 중요합니다. 브라우저의 기본 구조 사용자 인터페이스\n주소 표시줄, 이전/다음 버튼, 북마크 메뉴 등 요청한 페이지를 보여주는 창을 제외한 나머지 모든 부분입니다. 브라…","fields":{"slug":"/development/2021-01-25---browser/"},"frontmatter":{"date":"January 25, 2021","title":"브라우저, DNS","category":"DNS","draft":false}}},{"node":{"excerpt":"react key, 리액트의 리스트와 key 리액트에서 특정 배열에 있는 요소들을 렌더링 할때는 다음과 같이 map 함수를 사용하여 적용합니다. 위의 코드를 실행하면 리스트의 각 항목에 key를 넣어야 한다고 콘솔에 에러가 표시됩니다. 여기서 key란 ?? key key는 요소들의 리스트를 만들 때 포함해야 하는 특수한 문자열 속성이라고 공식문서에 명시되…","fields":{"slug":"/migration/2020-12-17---learn_1217/"},"frontmatter":{"date":"December 17, 2020","title":"학습한것들 정리","category":"learn","draft":false}}},{"node":{"excerpt":"styled-component global style,vscode, 드랍다운 메뉴, input focuse 핸들링, 문자열 앞뒤 공백 제거 styled-components 글로벌스타일 스타일드 컴포넌츠에서 전역 스타일을 줄 때 createGlobalStyle을 사용하여 주었습니다. 이번에 다시 스타일드 컴포넌트를 사용하며 공식문서를 확인하는데, V5를 오…","fields":{"slug":"/migration/2020-11-15---learn_1115/"},"frontmatter":{"date":"November 15, 2020","title":"학습 내용 정리","category":"learn","draft":false}}},{"node":{"excerpt":"RN을 학습하기 위해 간단하게 에어비엔비 UI를 따라서 만들어보고 있는 와중에 배우며 느낀점들을 정리해보았습니다. 부모 border 밖으로 튀어나옴 현상 View 컴포넌트 에 border-radius값을 주고 그 안에 Image컴포넌트로 이미지를 채웠을 때, 생각했던 대로라면 안에있는 이미지가 부모 보더 안에 채워져야 하는데,\nradius가 적용되지 않고…","fields":{"slug":"/migration/2020-10-20---rn_learn/"},"frontmatter":{"date":"October 20, 2020","title":"리액트 네이티브 학습 내용 정리","category":"react-native","draft":false}}},{"node":{"excerpt":"Recoil이란? Facebook에서 만든 React 상태 관리 라이브러리 입니다. Recoil은 자신의 장점을 다음과 같이 설명하고 있습니다. 리코일은 리액트처럼 일하고 생각한다. 앱에 일부를 추가하고 빠르고 유연한 공유 상태를 유지해라. 파생 데이터와 비동기 쿼리는 순수한 기능과 효율적인 구독에 길들여진다. 코드 분할을 손상시키지 않고 앱 전체에서 모…","fields":{"slug":"/migration/2020-09-25---recoil/"},"frontmatter":{"date":"September 25, 2020","title":"Recoil","category":"recoil","draft":false}}},{"node":{"excerpt":"카카오 주소찾기 적용, 인풋 첫글자 자동완성 대문자, useState callback 사용하기, 리액트, 타입스크립트 name of undefined에러, withRouter를 통한 history 객체 타입 매칭, 브라우저 새탭에서 열기, 새창에서 열기, 모바일 사파리에서 키보드가 나올때 포지션 깨짐현상, 웹팩에서 public폴더 사용하기, 리액트 다중요…","fields":{"slug":"/migration/2020-09-14---learn_20.9.14/"},"frontmatter":{"date":"September 14, 2020","title":"학습 내용 정리","category":"learn","draft":false}}},{"node":{"excerpt":"TS 핸드북을 따라가며 고수가 되기. 기본타입 프로그램이 유용하려면 숫자, 문자열, 구조체, 불리언 값과 같은 간단한 데이터 단위가 필요하다. 타입스크립트는 자바스크립트와\n거의 동일한 데이터 타입을 지원하며 열거 타입을 사용하여 더 편하게 사용이 가능함. 숫자 number 자바스크립트처럼 타입스크립트의 모든 숫자는 부동 소수값이다. 부동 소우에는\nnumb…","fields":{"slug":"/migration/2020-08-20---ts_handbook/"},"frontmatter":{"date":"August 20, 2020","title":"나만의 타입스크립트 핸드북","category":"typescript","draft":false}}},{"node":{"excerpt":"thunk 적용하기 라이브러리 설치 index.js에 미들웨어 추가 깃헙 사용자 정보 가져오기 예제 따라잡기 해당 깃헙의 사용자 정보를 get해오면 리턴하는 타입은 굉장히 많고 길다. 일일이 타입을 지정해주기 번거로울 수 있는데\nQuicktype이라는 서비스를 이용하면 JSON을 타입스크립트 인터페이스로 바꿔준다. 참고 : https://app.quick…","fields":{"slug":"/migration/2020-08-05---ts_saga/"},"frontmatter":{"date":"August 05, 2020","title":"타입스크립트 thunk, saga","category":"typescript","draft":false}}},{"node":{"excerpt":"이전에 typescript와 리덕스 를 함꼐 사용하는 글을 정리한 적이 있는데, 주로 사용하지 않았던 터라 시간이 지나고 잊은 부분도 있었고, typesafe-actions라는 라이브러리도 적용해서 코드도 깔끔하게 정리하기 위해 재차 시도 해보려고 합니다. 기본적인 ts, redux 카운터기능 구현과 todoList 기능 구현 modules/counter…","fields":{"slug":"/migration/2020-07-25---typesafe_actions/"},"frontmatter":{"date":"July 26, 2020","title":"타입스크립트 리덕스 리팩토링","category":"typescript","draft":false}}},{"node":{"excerpt":"이미지 로딩 실패시 처리, 웹폰트 관련내용, webpack dotenv, object-fit속성, 옵저버 관찰 등록 후 끊기, 옵셔널체이닝, input spellcheck, ios기기에서 safari접속 에러 내용, 모바일과 데스크탑 css 분리, react app 에서 IE 지원하기 이미지 로딩 실패시 ?? 개발하다보면 이미지에 데이터를 불러와서 바인딩…","fields":{"slug":"/migration/2020-07-20---learn_20.7.20/"},"frontmatter":{"date":"July 25, 2020","title":"learn learn learn","category":"learn","draft":false}}},{"node":{"excerpt":"Regular Expression 정규표현식 정규식이라고도 부른다. 보통 regex, regexp라 많이 쓴다. 왜 정규표현식? 프로그래밍에서 사용하는 일종의 형식 언어 주로 문자열 관련 프로그래밍에 많이 사용된다. 특히 컴파일러의 파서 부분은 정규표현식이 반드시 들어간다. 개발하다보면 특성상 일정한 규칙을 가진 텍스트 문자열을 사용하는 경우가 많은데,\n…","fields":{"slug":"/migration/2020-07-10---regExp/"},"frontmatter":{"date":"July 10, 2020","title":"정규식 정리","category":"learn","draft":false}}},{"node":{"excerpt":"객체와 스토리지 활용, 배열에서 요소 찾기, 모달에서 배경 스크롤 잡기, ref와 옵저버, 모바일 input텍스트입력기 입력 후 안보이게 하기, includes()메소드, .env파일 환경변수 접근, 큰사이즈의 이미지 불러오는 시간 벌기, 웹팩과 함께 codespliting적용, reduce를 사용한 컴포넌트 리팩토링, 라우트 이동 시 기존 ajax요청 …","fields":{"slug":"/migration/2020-06-25---learn_20.6.25/"},"frontmatter":{"date":"June 25, 2020","title":"배운내용 열심히 정리하기","category":"learn","draft":false}}},{"node":{"excerpt":"flex Flex플렉스는 플렉서블박스, 플렉스박스라고 부르기도 한다.\n레이아웃 배치 전용 기능으로 고안되었으며 float나 inline-block등을 이용한 기존 방식보다 강력하고 편리하다.\n처음 개발을 시작하고나서 html,css를 배운지 얼마 지나지 않아서 flex를 배웠고 (물론 아주 기본만, 지금도 마찬가지) 그 후로 간단한 정렬들을 모두 플렉스를…","fields":{"slug":"/migration/2020-06-21---flex_grid/"},"frontmatter":{"date":"June 21, 2020","title":"플렉스와 그리드","category":"flex","draft":false}}},{"node":{"excerpt":"브라우저의 스토리지 스토리지 객체는단순한 key-value 저장소이며, 이는 객체와 비슷하다. 하지만 이 데이터들은 페이지 로딩에도 온전하게 유지된다. key와 value는 항상 문자열이며 정수로 키를 사용할 경우 이는 자동으로 string으로 변경된다 Storage.getItem() 과 Storage.setItem()ㅁ서드를 사용할 수 있다. 언제 사용…","fields":{"slug":"/migration/2020-06-05---browser_storage/"},"frontmatter":{"date":"June 05, 2020","title":"브라우저의 스토리지","category":"storage","draft":false}}},{"node":{"excerpt":"그날그날 배운것들을 기록하자. ref관련, 개발모드 상용모드 체크, 이미지태그와 백그라운드 이미지, 버튼 클릭 시 애니메이션, 인풋의 타입 관련, 메모리 누수 관련, 현재 route경로 찾기, history객체 타입 지정 관련, react-infinite-scroll, scroll restoration, iframe 관련 로딩 시 처리, ref관련 리액트…","fields":{"slug":"/migration/2020-05-27---learned_at_5-27/"},"frontmatter":{"date":"May 27, 2020","title":"배움 정리하기","category":"learn","draft":false}}},{"node":{"excerpt":"자바스크립트 연산자 관련 정리 JSX문법을 다시보다가 자바스크립트의 연산자는 사용이 가능하나 선언문은 불가능하다는 내용에서 연산자가 정확히 감이 오지 않았다… 그저 삼항연산자, 조건부연산자는 사용이 가능하고 변수 선언, 일반 조건문은 사용이 안된다 정도로만 생각하고 있었기에 정리를 해본다. 연산자의 종류 할당 연산자\n할당 연산자는 오른쪽 피연산자의 값을 …","fields":{"slug":"/migration/2020-05-20---js_calculation/"},"frontmatter":{"date":"May 20, 2020","title":"자바스크립트 연산자","category":"javascript","draft":false}}},{"node":{"excerpt":"리액트 기본개념 다잡기 리액트를 처음 접하면서 공식 문서 및 여러 강의영상과 책을 구매해서 학습을 했었는데, 다시 처음 기본내용부터 보면서 제대로 숙지하지 못했던 내용들이 보였다.\n다시한번 되새길겸 정리하기로 하였다. 여러 프레임워크의 아키텍쳐 패턴 여러 다른 프레임워크들은 MVC패턴으로 모델-뷰-컨트롤러 이렇게 나뉘는 아키텍쳐를 사용하며 MVVM 모델-…","fields":{"slug":"/migration/2020-05-15---react_basic/"},"frontmatter":{"date":"May 15, 2020","title":"리액트 기본개념 다시잡기","category":"react","draft":false}}},{"node":{"excerpt":"Intersection Observer 인터섹션 옵저버. 교차관찰자 정리 인터섹션 옵저버란 한마디로 타겟으로 삼은 요소가 화면에 노출되었는지 여부를 간단하게 구독할 수 있는 API이다. 스크롤 이벤트로 이를 구현하려면 scroll이 일어날때마다, 그 요소가 존재하는지 매번 계산해야하는데 intersection observer를 사용하면 성능향상을 누릴 수…","fields":{"slug":"/migration/2020-05-10---observer/"},"frontmatter":{"date":"May 10, 2020","title":"Intersection Observer","category":"observer","draft":false}}},{"node":{"excerpt":"그날그날 배운것들을 기록하자. 스크롤바 없애기, 스크롤 이벤트시 쓰토를 적용, 웹팩 빌드 시 dist폴더에서 디렉토리 적용, 모바일 기기로 접속 시 스크롤 튕김 현상, 스크롤탑 smooth가 안먹던 현상, in 문법, 공통로직 함수 처리, ptr, 로딩 컴포넌트 처리 시 마운트 두번 되는 에러, 트랜스폼과 fixed, last child처리, 이미지 너비…","fields":{"slug":"/migration/2020-05-05---learned_at_5-05/"},"frontmatter":{"date":"May 05, 2020","title":"배움 정리하기","category":"learn","draft":false}}},{"node":{"excerpt":"라우트 리액트에서 SPA 싱글페이지라고 해서 화면이 한 종류는 아니다. 서버에서 사용자에게 제공하는 페이지는 한 종류이지만, 해당 페이지에서 로딩된 자바스크립트와 현재 사용자 브라우저의 주소 상태에 따라 다양한 화면을 보여준다. 다른 주소에 다른 화면을 보여주는것을 라우팅이라고 한다. 리액트 자체에 이 기능이 내장되어 있지않아서 라이브러리를 사용하여 이 …","fields":{"slug":"/migration/2020-04-30---route/"},"frontmatter":{"date":"April 30, 2020","title":"라우트","category":"react","draft":false}}},{"node":{"excerpt":"지난번 타입스크립트 + 리덕스로 투두리스트를 만든것을 typesafe-actions라는 라이브러리를 사용하여 더 편한 방법으로 코드를 개선하는 과정. 라이브러리 설치 counter.ts 리팩토링 src/modules/counter.ts 필요한 함수와 타입 import 3가지 유틸 함수 및 타입을 불러온다. 전버전에서는 createStandardAction…","fields":{"slug":"/migration/2020-04-21---ts_redux_actions/"},"frontmatter":{"date":"April 21, 2020","title":"타입스크립트와 리덕스 개선","category":"typescript","draft":false}}},{"node":{"excerpt":"타입스크립트를 어느정도 학습은했지만 직접적으로 프로젝트에 적용해본적은 없어서 손에 익지않았다. 일반 자바스크립트에서 사용할떄와 리액트에서 좀 다른느낌이며 리덕스와 쓸때는 또 다르더라 타입스크립트에 익숙해지기위한 정리 프로젝트 설치 redux자체는 자체적으로 타입스크립트 지원이 되지만 react에서는 지원이 되지 않기때문에 @types가 붙은 패키지들을 설…","fields":{"slug":"/migration/2020-04-18---ts_redux/"},"frontmatter":{"date":"April 18, 2020","title":"타입스크립트와 리덕스연동","category":"typescript","draft":false}}},{"node":{"excerpt":"리액트 컴포넌트를 테스트 할 때에는 주로 어떠한 결과가 화면상에 잘 나타났는지, 이벤트 혹은 함수가 호출 됐을 때 원하는 업데이트가 잘 반영되는지를 확인한다.\n이를 수행하는 가장 기본적인 방법은 react-dom/test-utils안에 있는 유틸 함수를 사용하는것이다. 그러나 조금 복잡하고, 불편한점들이 있다. 테스팅 라이브러리가 많이 사용되고 공식문서에…","fields":{"slug":"/migration/2020-04-12---react_test/"},"frontmatter":{"date":"April 12, 2020","title":"리액트 테스팅","category":"test","draft":false}}},{"node":{"excerpt":"테스트 주도 개발하기 테스트 테스트는 말 그대로 작성한 코드가 잘 작동하는것을 검증하는 작업이다.\n잘 작동하는지 확인하려면 구현한 기능을 직접 사용해보는 방법이 있다. 직접 클릭해보고 키보드로 입력해보고 잘 작동하는지 확인하는것. 그러나 프로젝트 규모가 커진다면 수동으로 일일이 확인하는 것은 번거로운 일이다. 그래서 테스트 자동화라는 작업을 하여 사람이 …","fields":{"slug":"/migration/2020-04-10---test/"},"frontmatter":{"date":"April 10, 2020","title":"테스팅","category":"test","draft":false}}},{"node":{"excerpt":"개발을 처음 시작하고 html을 배우고 css를 배웠다. 배우면서 html로 구조를 잡고 css로 그 구조에 스타일을 넣어준다는게 굉장히 신선하고 재밌었다. 그러다가 1차 프로젝트를 하며 scss를 적용했고 2차프로젝트에서 styled-component로 스타일링을 하였다. 그 후 스타일드컴포넌트가 편해서 쭉 스타일드컴포넌트를 사용했는데 scss는 상대적…","fields":{"slug":"/migration/2020-04-03---scss/"},"frontmatter":{"date":"April 03, 2020","title":"스타일링 정복기","category":"javascript","draft":false}}},{"node":{"excerpt":"자바스크립트에서 함수는 1급이다. 함수 자체는 값처럼 취급될 수 있기에 리턴이 가능함. 또한 리턴 뿐만 아니라 인자로 전달될 수 있다. 이 또한 1급이기 때문에 콜백함수 맵함수의 인자로 el … el *2 까지 인자로 함수를 넣고 있다. 평소에 자연스럽게 쓰던것. 이렇게 runCallback이라는 함수에 인자로 함수를 전달하면 전달받은 함수를 실행시킨다.…","fields":{"slug":"/migration/2020-04-02---function/"},"frontmatter":{"date":"April 02, 2020","title":"자바스크립트 함수","category":"javascript","draft":false}}},{"node":{"excerpt":"그날그날 배운것들을 기록하자. git flow, react spring, useState에 함수호출, DOM 언마운트시 애니메이션, css 이미지 크기, props전달 중 비구조할당, css 중간위치잡기, 타 url로 보내기, react-device-detect, 일정 박스안에 텍스트가 넘칠 때 처리, toLocaleString 하루하루 많은 문제들과 부…","fields":{"slug":"/migration/2020-04-28---learned_at_4-28/"},"frontmatter":{"date":"April 02, 2020","title":"배움 정리","category":"learn","draft":false}}},{"node":{"excerpt":"리액트 프로젝트를 완성하며 사용자에게 제공할 때 빌드 작업을 통해 프로젝트에서 사용되는 자바스크립트 파일 안에서 불필요 주석, 에러메시지, 공백등을 제거하여 파일 크기를 최소화하기도 하고, 브라우저에서 jsx 문법이나 다른 최신 자바스크립트 문법이 원활하게 실행되도록 코드의 트랜스파일 작업도 한다. 이 작업은 웹팩이 담당한다. 별도의 설정을 하지 않으면 …","fields":{"slug":"/migration/2020-03-30---code_spliting/"},"frontmatter":{"date":"March 30, 2020","title":"코드 스플리팅","category":"javascript","draft":false}}},{"node":{"excerpt":"이번에는 자주 사용했지만 헷갈리는 부분들이 있는 메소드들 정리해보기 map 과 filter map, filter메소드는 인자로 콜백함수를 받는다. 해당 콜백함수는 배열을 순회하면서 각각의 배열 요소의 정보를 받으며 실행된다. 이 콜백함수의 리턴 결과는 map / filter 메소드의 결과물을 결정한다. map 배열을 순회하며 얻은 결과들로 이루어진 배열을…","fields":{"slug":"/migration/2020-03-28---array_method2/"},"frontmatter":{"date":"March 28, 2020","title":"배열 메소드2","category":"javascript","draft":false}}},{"node":{"excerpt":"자바스크립트로 프로젝트를 진행하다보면 배열메소드들을 굉장히 많이 사용하게 되는데 머릿속에 항상 남아있지 않아서 찾아보며 사용하곤했다. 정말 많은 분야에서 매우 유용하게 활용되는 배열메소드들을 정복해보자. push push는 해당 배열의 맨 마지막에 요소를 추가한다. pop 해당 배열의 맨 마지막 요소를 제거한다. unshift 배열의 맨 앞에 요소 하나를…","fields":{"slug":"/migration/2020-03-26---array_method/"},"frontmatter":{"date":"March 26, 2020","title":"배열 메소드","category":"javascript","draft":false}}},{"node":{"excerpt":"이벤트 버블링 Event Bubbling 이벤트 버블링이란? 특정 화면 요소에서 이벤트가 발생했을 때 해당 이벤트가 더 상위의 화면 요소들로 전달되어 가는 특성 이름처럼 거품이 막 불어나듯 전파가 된다. 여기서 상위 화면 요소란 트리 구조상 한 단계 위에있는 요소들을 가르키며 최상위 요소는 body 세가지 div에 모두 클릭이벤트를 등록하고 three클래…","fields":{"slug":"/migration/2020-03-24---eventBubbling/"},"frontmatter":{"date":"March 24, 2020","title":"이벤트 전파","category":"javascript","draft":false}}},{"node":{"excerpt":"원시타입과 참조형 타입 원시타입 원시타입: Primitive Data Type 원시타입에는 Number, Boolean, String, Symbol, null, undefined 가 있다. 원시타입은 변수에 값 자체가 저장된다. 참조타입 참조타입: Reference Data Type 참조타입에는 Array, Object가 있다. 참조타입은 변수에 값이 저…","fields":{"slug":"/migration/2020-03-20---data_type/"},"frontmatter":{"date":"March 20, 2020","title":"데이터 타입","category":"data_type","draft":false}}},{"node":{"excerpt":"깃을 사용하는 이유 ?? 협업에 매우 좋기 때문. 깃에 관하여 git merge 머지란 브랜치의 변경사항의 병합(합치기)을 위해 사용하는 깃 명령어이다. git merge (브랜치명) 브랜치명은 합칠 브랜치이고 바탕이되는 브랜치가 아니다.\nB 브랜치를 A 브랜치로 병합(merge)할 때 (B ---> A) merge시 메시지 fast-foward: 빨리감…","fields":{"slug":"/migration/2020-03-19---git_ajax/"},"frontmatter":{"date":"March 19, 2020","title":"깃에 관하여","category":"git","draft":false}}},{"node":{"excerpt":"spa Single Page Application 단일 페이지 어플리케이션 하나의 페이지라는 것은 HTML을 뜻한다. 둘 이상의 HTML 페이지를 가진 MPA와 달리 하나의 HTML로 웹페이지를 구동하기에 매 요청마다 새로운 HTML 페이지를 불러올 필요가 없다. 서버에서 페이지를 그리는 작업들이 프론트단에서 이루어지기에 서버쪽 렌더 페이지의 코드를 작성…","fields":{"slug":"/migration/2020-03-18---spa_mpa/"},"frontmatter":{"date":"March 18, 2020","title":"spa/mpa,csr/ssr","category":"csr","draft":false}}},{"node":{"excerpt":"HTTP 와 RESTful JWT 에 관해 학습 및 정리 HTTP Hyper Text Transfer Protocol 하이퍼텍스트(HTML) 문서를 교환하기 위해 만들어진 통신규약이다. 즉 웹상에서 네트워크로 서버끼리 통신을 할때 어떠한 형식으로 통신을 하자고 규정해놓은 통신 형식 또는 통신 구조이다. 핵심요소 통신방식\nHTTP의 통신방식은 기본적으로 요…","fields":{"slug":"/migration/2020-03-17---http/"},"frontmatter":{"date":"March 17, 2020","title":"http, restful, jwt","category":"typescript","draft":false}}},{"node":{"excerpt":"익숙해질것 같으면서도 그렇지 않은 타입스크립트 부수기 타입스크립트 + 리액트 적용 정리 프로젝트 생성 타입스크립트를 사용하는 리액트 컴포넌트는 *.tsx 확장자를 사용한다. App.tsx 컴포넌트 만들어보기 React.FC 장단점 React.FC 에서는 props의 타입을 generics로 넣어서 사용한다. props에 children이 기본적으로 들어가…","fields":{"slug":"/migration/2020-03-16---react_ts/"},"frontmatter":{"date":"March 16, 2020","title":"타입스크립트 리액트","category":"typescript","draft":false}}},{"node":{"excerpt":"저난번 찾아본 강의한번으로는 머리에 잘 들어오지 않아서 다른 자료를 찾아보았다.\n이번에는 벨로퍼트님 블로그를 보며 타입스크립트를 정리해보자. 기본타입 값을 선언 할 때 기본 타입 지정하기 특정변수의 타입을 지정 할 수 있으며 사전에 지정한 타입이 아닌 값이 설정 될 때 바로 에러가 난다. | 는 사용해 or 과 같은 역할을 해준다. 함수타입 정의 우측에 …","fields":{"slug":"/migration/2020-03-15---typescript_2/"},"frontmatter":{"date":"March 15, 2020","title":"타입스크립트 정복기","category":"typescript","draft":false}}},{"node":{"excerpt":"타입스크립트 기본개념들을 정리하기 타입스크립트에 익숙해지면 타입스크립트없이 개발을 하기힘들정도로 좋다고한다. 그만큼 편리하다고한다.\n그 편리함을 느끼기위해 타입스크립트에 익숙해지기위한 도전기 타입스크립트란?? 프로그래밍 언어이다 자바스크립트와 호환되는 언어인데 자바스크립트 위에 타입스크립트 문법을 추가한 언어 타입스크립트에서 프로그램 작성을 위해 기본 제…","fields":{"slug":"/migration/2020-03-14---ts/"},"frontmatter":{"date":"March 14, 2020","title":"타입스크립트 학습","category":"typescript","draft":false}}},{"node":{"excerpt":"자바스크립트 비동기 처리에 대해 알아보며 promise, async / await 개념 정리를 해보자 promise란? 프로미스는 자바스크립트 비동기 처리에 사용되는 객체이다. 비동기 처리를 먼저 알아보자. 비동기 처리 비동기 처리란 단순히 특정 코드의 연산이 끝날 때까지 기다리고 다음 코드를 읽는게 아니라 다음 코드를 먼저 실행하는 자바스크립트의 특성을…","fields":{"slug":"/migration/2020-03-13---front_promise/"},"frontmatter":{"date":"March 13, 2020","title":"자바스크립트 promise","category":"javascript","draft":false}}},{"node":{"excerpt":"클로저 파헤치기 closure 일단 closure 사전적 의미로는 폐쇠란다. 무엇을 폐쇠한다는건지는 잘 모르겠지만 한번 보다 보면 이래서 이름이 클로저구나 느낌이 온다. 클로저는 자바스크립트에서 함수가 가지는 여러 특징들로 인해 생겨나는 특별한 함수이다. 아주 혼란스럽지만 동시에 아주 유용한 개념.\n그렇기에 정리를 해보자 함수에서 이전에 배웠던 스코프 개…","fields":{"slug":"/migration/2020-03-12---front_closure/"},"frontmatter":{"date":"March 12, 2020","title":"자바스크립트 클로저","category":"javascript","draft":false}}},{"node":{"excerpt":"간단할것같지만 그렇지 않은 자바스크립트 this… 학습해보자 this 디스란 무엇인가?? mdn을 보면 javascript에서 함수의 this 키워드는 다른 언어와는 조금 다르게 동작한다. 또한 엄격 모드와 비엄격 모드에서도 일부 차이가 있다. 대부분의 경우 this의 값은 함수를 호출한 방법이 결정한다. 그래서 ECMAScript5는 함수를 어떻게 호출…","fields":{"slug":"/migration/2020-03-11---front_this/"},"frontmatter":{"date":"March 11, 2020","title":"자바스크립트 this","category":"javascript","draft":false}}},{"node":{"excerpt":"이번 스터디에는 자바스크립트의 const, let, var의 차이와 scope, 클로저, this의 개념에대해 공부하기로 하였다. 클로져와 this를 보기 전에 프로토타입 개념에 대해 파헤쳐보자. scope 스코프란? 한마디로 현재 접근할 수 있는 변수들의 범위.. 즉 범위이다. block block 이란 중괄호로{} 감싸진 것이라고 보면 된다. 함수 내…","fields":{"slug":"/migration/2020-03-10---front_study2/"},"frontmatter":{"date":"March 10, 2020","title":"프론트 스터디 정리하기2","category":"study","draft":false}}},{"node":{"excerpt":"위코드 수강을 마치고 동기분들과 함께 면접준비도 할겸 부족한 개념도 채울겸 스터디를 진행하기로 하였다. 스터디를 준비하며 정리한 내용을 기록 해보자 HTML HTML HTML은 Hypertext Markup Language 의 약자이다. HTML이란 웹 페이지를 만들기 위한 언어 이며 웹 브라우저 위에서 동작하는 언어이다. 웹브라우저가 HTML을 읽고 해…","fields":{"slug":"/migration/2020-03-09---front_study/"},"frontmatter":{"date":"March 09, 2020","title":"프론트 스터디 정리하기","category":"study","draft":false}}},{"node":{"excerpt":"MyFeed 컴포넌트 화면에 헤더에 표시될 스토리리스트와 피드 리스트를 상태관리하여 만들어 사용했다. MyFeed컴포넌트가 화면에 표시되면 useContext의 getMyFeed함수를 사용하여 데이터를 가져와 state값을 설정하였다. FlatList의 onRefresh를 사용하여 당겨서 새로고침을 구현하고 이때 헤더의 스토리리스트와 피드리스트를 다시 가…","fields":{"slug":"/migration/2020-03-07---rn_sns_app2/"},"frontmatter":{"date":"March 07, 2020","title":"리액트 네이티브 sns앱 만들기2","category":"react_native","draft":false}}},{"node":{"excerpt":"네비게이션 컴포넌트 이번 앱에서는 스위치, 스택네비게이션 이외에도 탭, 드로워 네비게이션을 활용한다. 탭 네비게이션에 아이콘을 표시하기 위해 리액트 네이티비의 Image컴포넌트를 활용한다. 화면에 표시될 컴포넌트 중 네비게이션 헤더가 필요한 컴포넌트는 기본적으로 스텍네비게이션을 추가해 주어야 한다. MainTabs에서 탭의 라벨을 제거하기 위해 tabBa…","fields":{"slug":"/migration/2020-03-06---rn_sns_app/"},"frontmatter":{"date":"March 06, 2020","title":"리액트 네이티브 sns앱 만들기","category":"react-native","draft":false}}},{"node":{"excerpt":"MovieHome 컴포넌트 로그아웃 기능 구현을 위해 AsyncStorage를 사용하고 로그아웃을 누르면 키를 제거하고 로그인 네비게이션으로 이동한다 useEffect를 사용하여 로그아웃 함수를 setParams를 사용하여 navigation에 매개변수를 설정한다. navigation을 사용하는 모든 부분에서 이 매개변수를 사용할 수 있다.\nheaderB…","fields":{"slug":"/migration/2020-03-05---rn_movie_app2/"},"frontmatter":{"date":"March 05, 2020","title":"리액트 네이티브 영화앱 만들기2","category":"react-native","draft":false}}},{"node":{"excerpt":"네비게이션 리액트 네이티브는 네비게이션 기능을 지원하지 않는다. 따라서 오픈소스 라이브러리를 사용해야 한다. react-native-navigation react-navigation native-navigation react-native-router react-native-router-flux\n네비게이션을 사용하기위한 라이브러리 설치 네비게이션을 사용하기…","fields":{"slug":"/migration/2020-03-04---rn_movie_app/"},"frontmatter":{"date":"March 04, 2020","title":"리액트 네이티브 영화앱 만들기","category":"react-native","draft":false}}},{"node":{"excerpt":"앱 아이콘 앱에 아이콘을 적용하기 위해 generator-rn-toolbox를 사용한다. generator-rn-toolbox imagemagick generator-rn-toolbox로 이미지를 생성하기 위해 imagemagick 라이브러리 설치 아이콘 생성 앱 아이콘을 생성하기 위해서 1024 x 1024 사이즈의 png 형식의 이미지 파일이 필요하다…","fields":{"slug":"/migration/2020-03-01---rn_app_image copy/"},"frontmatter":{"date":"March 01, 2020","title":"리액트 네이티브 앱 이미지 씌우기","category":"react-native","draft":false}}},{"node":{"excerpt":"EmptyItem 컴포넌트 데이터가 없을 때, 데이터를 추가하도록 안내하는 문구를 가운데 정렬로 표시 TodoItem 컴포넌트 이 컴포넌트는 부모 컴포넌트로부터 데이터 하나를 전달받아 화면에 표시한다. 식제 아이콘을 선택하였을 시, 삭제 함수를 전달받아 삭제하도록 설정했다. AddTodo 컴포넌트 할 일 추가를 위한 컴포넌트 할 일 추가 버튼을 눌렀을 때…","fields":{"slug":"/migration/2020-02-26---rn_todolist2/"},"frontmatter":{"date":"February 26, 2020","title":"리액트 네이티브 할일목록앱2","category":"react-native","draft":false}}},{"node":{"excerpt":"AsyncStorage 설치 및 생성 AsyncStorage 란 앱애서의 스토리지로 브라우저의 스토리지와 유사한 개념이다. 앱을 종료하고 다시 실행해도, 할 일 리스트를 표시하기 위해 데이터를 앱 내에 저장하기위한 용도. 0.6 이후의 버전의 리액트 네이티브 에서 AsyncStorage를 사용하기 위해 설치를 하여햐 한다. 설치한 후 ios에서 필요한 라…","fields":{"slug":"/migration/2020-02-25---rn_todolist/"},"frontmatter":{"date":"February 25, 2020","title":"리액트 네이티브 할일목록앱","category":"react_native","draft":false}}},{"node":{"excerpt":"왓치맨 왓치맨은 특정 디렉토리나 파일을 감시하다가, 변경이; 발생하면, 특정 동작을 실행(trigger)하도록 역할을 한다. 리액트 네이티브는 소스코드의 변경이 발생하면 자동적으로 빌드하고 디바이스 또는 시뮬레이터에 업로드하기 위해 왓치맨을 사용한다 리액트 네이티브 CLI 리액트 네이티브를 시작하는 방법은 엑스포 CLI와 리액트 네이티브 CLI 두 가지 …","fields":{"slug":"/migration/2020-02-23---rn_settiong/"},"frontmatter":{"date":"February 22, 2020","title":"리액트 네이티브 초기 설정","category":"react_native","draft":false}}},{"node":{"excerpt":"손재영 새로운 기술을 알아가는 것을 좋아합니다. 사용자들이 이용하며 즐거움을 느낄 수 있는 웹을 만들고 싶어합니다. 항상 적극적인 자세로 배우려는 준비가 되어있습니다.   Github https://github.com/jaeyoung-son Blog https://jaeyoung-son.github.io E-mail zkqkzl2@gmail.com 기술 …","fields":{"slug":"/migration/2020-02-22---introduce/"},"frontmatter":{"date":"February 21, 2020","title":"손재영","category":"introduce","draft":false}}},{"node":{"excerpt":"Brandi 인턴쉽 관리자 클론 Project 1. 프로젝트 소개 Brandi 관리자 클론 (4주 1/28 ~ 2/21) 2. 사용한 기술 HTML/JavaSciript/React/ReactHooks/styled-compomnent/redux 추가 툴 Material-UI/CKEditor/Crypto.js/Webpack build 3. 나의 역할 로그인 …","fields":{"slug":"/migration/2020-02-21--- 3rdProject/"},"frontmatter":{"date":"February 21, 2020","title":"Brandi 인턴쉽(3차 프로젝트)","category":"react","draft":false}}},{"node":{"excerpt":"미들웨어 리덕스 미들웨어는 액션을 디스패치했을때 리듀서에서 이를 처리하기 전에 지정된 작업들을 실행한다. 미들웨어는 액션과 리듀서 사이의 중간자라고 볼 수 있다.\n리듀서가 액션을 처리하기 전에 미들웨어가 액션을 단순히 콘솔에 기록하거나, 전달받은 액션 정보를 기반으로 액션을 취소하거나, 다른 종류의 액션을 추가로 디스패치할 수 있다. 미들웨어 기본구조 화…","fields":{"slug":"/migration/2020-02-10--- middleware/"},"frontmatter":{"date":"February 10, 2020","title":"미들웨어","category":"react","draft":false}}},{"node":{"excerpt":"인풋창 핸들링 어드민 페이지 회원가입 기능을 구현 하는 중에 여러 개의 인풋창을 핸들링 하려다 보니 비동기의 문제나 여러 문제가 생겼다. 허선생님의 도움을 받아 해결해나가는 과정을 기록 구현 내용 10가지의 인풋창이 있고 아이디 입력창은 5글자 미만이면 인풋창의 보더색이 바뀌며 헬퍼 텍스트가 나오며 각각의 인풋창의 조건은 다르다. submit버튼을 누르면…","fields":{"slug":"/migration/2020-02-04--- input_handling/"},"frontmatter":{"date":"February 04, 2020","title":"다중 인풋 핸들링","category":"javascript","draft":false}}},{"node":{"excerpt":"Axios 개념 Axios는 HTTP통신을 하는데 매우 인기있는 javascript 라이브러리이다. Axios는 브라우저와 node.js 플랫폼에서 모두 사용할 수 있다. 또한 IE8이상을 포함한 모든 최신 브라우저를 지원한다.\nAxios는 Promise를 기반으로 하여 async/await문법을 사용하여 XHR요청을 매우 쉽게 할 수 있다. Fetch …","fields":{"slug":"/migration/2020-02-03--- axios/"},"frontmatter":{"date":"February 03, 2020","title":"axios","category":"axios","draft":false}}},{"node":{"excerpt":"암호화 개념정리 암호화에 있어서 가장 먼저 분류되는 방식은 양방향,단방향 알고리즘이다. 양방향 알고리즘은 암호화된 암호문을 복호화 할 수 있는 알고리즘을 의미하며 단방향 알고리즘은 복호화가 불가능한 알고리즘이다.\n양방향 알고리즘은 대표적으로 대칭키(비공개키)와 비대칭키(공개키) 방식으로 나누어지며, 단방향은 Hash방식이 대표적이다 대칭키 비대칭키 방식 …","fields":{"slug":"/migration/2020-02-02--- encryption/"},"frontmatter":{"date":"February 02, 2020","title":"암호화","category":"encryption","draft":false}}},{"node":{"excerpt":"웹팩 개념잡기 모듈 번들러 모듈 번들러란 여러개의 나누어져 있는 파일들을 하나의 파일로 만들어주는 라이브러리를 말한다.\n모듈 번들러 라이브러리는 웹팩(webpack), Parcel 등이 있다. 실습하기 프로젝트 설정하기 디렉터리 만든 후 초기화 필요한 라이브러리 설치 webpack.config.js 파일 작성\nentry는 웹팩이 빌드할 파일을 알려주는 역…","fields":{"slug":"/migration/2020-02-01---Webpack/"},"frontmatter":{"date":"February 01, 2020","title":"WEbpack 설정","category":"webpack","draft":false}}},{"node":{"excerpt":"redux-saga redux-saga는 thunk 다음으로 많이 사용하는 비동기 작업 관련 미들웨어이다. thunk는 함수 형태의 액션을 디스패치하여 미들웨어에서 해당 함수에 스토어의 dispatch와 getState를 파라미터로 넣어서 사용하는 원리\nsaga는 조금 더 까다로운 상황에서 유용하다 기존 요청을 취소 처리 할 때(불필요한 중복 요청 방지)…","fields":{"slug":"/migration/2020-02-11--- saga/"},"frontmatter":{"date":"February 01, 2020","title":"사가","category":"react","draft":false}}},{"node":{"excerpt":"WegoPlate Project 1. 프로젝트 소개 mangoplate 클론 (2주) 2. 사용한 기술 HTML/SCSS/JavaSciript/React/ReactHooks/styled-compomnent/redux 3. 나의 역할 레스토랑 상세페이지 탑리스트 페이지 맛집리스트 페이지 4. 프로젝트를 진행하며 잘했다고 느껴지는 부분 라이브러리에 의존하지 …","fields":{"slug":"/migration/2020-01-24---sec_project/"},"frontmatter":{"date":"January 24, 2020","title":"second_project","category":"project","draft":false}}},{"node":{"excerpt":"Vue.js Vue는 사용자 인터페이스를 만들기 위한 프로그레시브 프레임워크 이다. 다른 단일형 프레임워크와 달리 Vue는 점진적으로 채택할 수 있도록 설계되었다. 선언적 렌더링 Vue.js의 핵심에는 간단한 템플릿 구문을 사용하여 DOM에 데이터를 선언적으로 렌더링 할 수 있는 시스템이 있다.\n텍스트 보간 이외에도 다음과 같은 엘리먼트 속성을 바인딩할 …","fields":{"slug":"/migration/2020-01-23---Vuejs/"},"frontmatter":{"date":"January 23, 2020","title":"Vuejs","category":"Vue","draft":false}}},{"node":{"excerpt":"리덕스 준비하기 리덕스를 사용할 때 가장 많이 사용하는 패턴은 프레젠테이셔널 컴포넌트와 컨테이너 컴포넌트를 분리하는 것이다. 여기서 프레젠테이셔널 컴포넌트란 주로 상태 관리가 이루어지지 않고, 그저 props를 받아와서 화면에 보여주기만 하는 컴포넌트를 말한다. 컨테이너 컴포넌트는 리덕스와 연동도어 있는 컴포넌트로, 리덕스로부터 상태를 받아 오기도 하고 …","fields":{"slug":"/migration/2020-01-15---redux_practice/"},"frontmatter":{"date":"January 15, 2020","title":"redux_practice","category":"reduxt","draft":false}}},{"node":{"excerpt":"redux 리덕스는 가장 많이 사용하는 리액트 상태관리 라이브러리이다. 리덕스를 사용하면 컴포넌트의 상태 업데이트 관련 로직을 다른 파일로 분리시켜서 더욱 효율적으로 관리할 수 있다. 리덕스는 전역 상태를 관리할 때 굉장히 효과적인데 단순히 전역 상태 관리만 한다면 Context API를 사용하는 것만으로도 충분하지만 리덕스를 사용하면 더욱 체계적으로 관…","fields":{"slug":"/migration/2020-01-13---redux/"},"frontmatter":{"date":"January 13, 2020","title":"redix_basoc","category":"redux","draft":false}}},{"node":{"excerpt":"StyledComponent 스타일드 컴포넌트는 자바스크립트 파일 안에 스타일을 선언하는 방식이다. 이 방식을 ‘CSS-in-JS’라고 부르며 스타일드컴포넌트 이모션등이 대표적이다. Tagged 템플릿 리터럴 스타일을 작성할 때 (백틱)을 사용하여 만든 문자열에 스타일 정보를 넣어준다. 여기서 사용한 문법을 Tagged 템플릿 리터럴이라고 부른다. 일반 …","fields":{"slug":"/migration/2020-01-06---styled-component/"},"frontmatter":{"date":"January 06, 2020","title":"Styled_component","category":"styled_component","draft":false}}},{"node":{"excerpt":"리액트 훅스 Hook는 리액트 v16.8에 새로 도입된 기능으로 함수형 컴포넌트에서도 상태 관리를 할 수 있는 useState, 렌더링 직후 작업을 설정하는 useEffect 등의 기능을 제공하여 기존의 함수형 컴포넌트에서 할 수 없었던 다양한 작업을 할 수 있게 해준다. useState useState는 가장 기본적인 Hook이며 함수형 컴포넌트에서도 …","fields":{"slug":"/migration/2020-01-05---reacthooks/"},"frontmatter":{"date":"January 05, 2020","title":"React-hooks","category":"react","draft":false}}},{"node":{"excerpt":"WeSpace Project 1. 프로젝트 소개 spacecloud 클론 (2주) 2. 사용한 기술 HTML/SCSS/JavaSciript/React 3. 나의 역할 로그인 페이지 회원가입 페이지 공간정보 상세페이지 4. 프로젝트를 진행하며 잘했다고 느껴지는 부분 작은 기능들도 놓치고 싶지 않아서 끝까지 파고 들었다. (물론 놓친 기능들이 많다) 백엔드와…","fields":{"slug":"/migration/2020-01-04---1st-project/"},"frontmatter":{"date":"January 04, 2020","title":"1st project-review","category":"project","draft":false}}},{"node":{"excerpt":"라이프 사이클은 총 세가지 로 나뉜다. 마운트 업데이트 언마운트 마운트 DOM이 생성되고 웹 브라우저상에 나타나는 것을 마운트 라고 한다. constructor: 컴포넌트를 새로 만들 때마다 호출되는 클래스 생성자 메서드. getDerviedStateFromProps: props에 있는 값을 state에 동기화하는 메서드. render: 준비한 UI를 렌…","fields":{"slug":"/migration/2019-12-21---life-cycle/"},"frontmatter":{"date":"December 21, 2019","title":"react life-cycle","category":"react","draft":false}}},{"node":{"excerpt":"HTTP란 HyperText Transfer Protocol 웹상에서 네트워크로 서버끼리 통신을 할때 규정해놓은 통신형식 또는 통신 구조이다 프론트앤드 서버와 클라이언트간의 통신에도 사용되며 백앤드서버와 프론트앤드서버 통신에도 사용된다. 통신방식 HTTP는 기본적으로 요청/응답 (request/response) 구조이다. 클라이언트가 HTTP reques…","fields":{"slug":"/migration/2019-12-15---http/"},"frontmatter":{"date":"December 15, 2019","title":"http","category":"http","draft":false}}},{"node":{"excerpt":"React React는 Virtual DOM을 사용하여 실제 DOM에 접근하여 조작하는 대신, 이를 추상화한 자바스크립트 객체를 구성하여 사용한다. DOM의 가벼운 사본과 비슷한 느낌이다. 리액트에서 데이터가 웹브라우저에 실제 DOM을 업데이트할 때는 다음 절차를 밟는다. 데이터를 업데이트하면 전체 UI를 Virtual DOM에 리렌더링한다. 이전 Vir…","fields":{"slug":"/migration/2019-12-14---react/"},"frontmatter":{"date":"December 14, 2019","title":"react","category":"react","draft":false}}},{"node":{"excerpt":"객체지향 과 클래스 객체지향 프로그래밍이란 프로그램을 객체들로 구성하고, 객체들 간에 서로 상호작용하도록 작성하는 방법이다. 클래스는 객체를 잘 설게하기 위한 틀이며 특정 로직을 가지고있는 메소드와 변수를 가진다. 큰 규모의 객체이거나 비슷한 모양의 객체를 계속 만들어야 한다면 class라는 설게도를 통해 만들 수 있다. 객체 객체란 순서가 없는 데이터의…","fields":{"slug":"/migration/2019-12-01---class/"},"frontmatter":{"date":"December 01, 2019","title":"객체지향 과 클래스","category":"class","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["3128451518","3498048237"]}