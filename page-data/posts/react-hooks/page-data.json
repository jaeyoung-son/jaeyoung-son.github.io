{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/react-hooks/","result":{"data":{"markdownRemark":{"id":"11bda2b7-a4d0-5a06-9f39-ffad0f7e9f5c","html":"<h1 id=\"리액트-훅스\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%9B%85%EC%8A%A4\" aria-label=\"리액트 훅스 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트 훅스</h1>\n<h3 id=\"hook는-리액트-v168에-새로-도입된-기능으로-함수형-컴포넌트에서도-상태-관리를-할-수-있는-usestate-렌더링-직후-작업을-설정하는-useeffect-등의-기능을-제공하여-기존의-함수형-컴포넌트에서-할-수-없었던-다양한-작업을-할-수-있게-해준다\"><a href=\"#hook%EB%8A%94-%EB%A6%AC%EC%95%A1%ED%8A%B8-v168%EC%97%90-%EC%83%88%EB%A1%9C-%EB%8F%84%EC%9E%85%EB%90%9C-%EA%B8%B0%EB%8A%A5%EC%9C%BC%EB%A1%9C-%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C%EB%8F%84-%EC%83%81%ED%83%9C-%EA%B4%80%EB%A6%AC%EB%A5%BC-%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-usestate-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%A7%81%ED%9B%84-%EC%9E%91%EC%97%85%EC%9D%84-%EC%84%A4%EC%A0%95%ED%95%98%EB%8A%94-useeffect-%EB%93%B1%EC%9D%98-%EA%B8%B0%EB%8A%A5%EC%9D%84-%EC%A0%9C%EA%B3%B5%ED%95%98%EC%97%AC-%EA%B8%B0%EC%A1%B4%EC%9D%98-%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C-%ED%95%A0-%EC%88%98-%EC%97%86%EC%97%88%EB%8D%98-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%9E%91%EC%97%85%EC%9D%84-%ED%95%A0-%EC%88%98-%EC%9E%88%EA%B2%8C-%ED%95%B4%EC%A4%80%EB%8B%A4\" aria-label=\"hook는 리액트 v168에 새로 도입된 기능으로 함수형 컴포넌트에서도 상태 관리를 할 수 있는 usestate 렌더링 직후 작업을 설정하는 useeffect 등의 기능을 제공하여 기존의 함수형 컴포넌트에서 할 수 없었던 다양한 작업을 할 수 있게 해준다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hook는 리액트 v16.8에 새로 도입된 기능으로 함수형 컴포넌트에서도 상태 관리를 할 수 있는 useState, 렌더링 직후 작업을 설정하는 useEffect 등의 기능을 제공하여 기존의 함수형 컴포넌트에서 할 수 없었던 다양한 작업을 할 수 있게 해준다.</h3>\n<h2 id=\"usestate\"><a href=\"#usestate\" aria-label=\"usestate permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useState</h2>\n<h4 id=\"usestate는-가장-기본적인-hook이며-함수형-컴포넌트에서도-가변적인-상태를-지닐-수-있게-해준다\"><a href=\"#usestate%EB%8A%94-%EA%B0%80%EC%9E%A5-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-hook%EC%9D%B4%EB%A9%B0-%ED%95%A8%EC%88%98%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C%EB%8F%84-%EA%B0%80%EB%B3%80%EC%A0%81%EC%9D%B8-%EC%83%81%ED%83%9C%EB%A5%BC-%EC%A7%80%EB%8B%90-%EC%88%98-%EC%9E%88%EA%B2%8C-%ED%95%B4%EC%A4%80%EB%8B%A4\" aria-label=\"usestate는 가장 기본적인 hook이며 함수형 컴포넌트에서도 가변적인 상태를 지닐 수 있게 해준다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useState는 가장 기본적인 Hook이며 함수형 컴포넌트에서도 가변적인 상태를 지닐 수 있게 해준다.</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> 'react\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">,</span> setValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<h4 id=\"usestate-함수의-파라미터에는-상태의-기본값을-넣어준다-현재-0을-넣어-주었는데-기본값을-0으로-설정하겠다는-의미이다-이-함수가-호출되면-배열을-반환하고-그-배열의-첫번째-원소는-상태-값-두번째-원소는-상태를-설정하는-함수이다-이-함수에-파라미터를-넣어서-호출하면-전달받은-파라미터로-값이-바뀌고-컴포넌트가-정상적으로-리렌더링이-된다\"><a href=\"#usestate-%ED%95%A8%EC%88%98%EC%9D%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EC%97%90%EB%8A%94-%EC%83%81%ED%83%9C%EC%9D%98-%EA%B8%B0%EB%B3%B8%EA%B0%92%EC%9D%84-%EB%84%A3%EC%96%B4%EC%A4%80%EB%8B%A4-%ED%98%84%EC%9E%AC-0%EC%9D%84-%EB%84%A3%EC%96%B4-%EC%A3%BC%EC%97%88%EB%8A%94%EB%8D%B0-%EA%B8%B0%EB%B3%B8%EA%B0%92%EC%9D%84-0%EC%9C%BC%EB%A1%9C-%EC%84%A4%EC%A0%95%ED%95%98%EA%B2%A0%EB%8B%A4%EB%8A%94-%EC%9D%98%EB%AF%B8%EC%9D%B4%EB%8B%A4-%EC%9D%B4-%ED%95%A8%EC%88%98%EA%B0%80-%ED%98%B8%EC%B6%9C%EB%90%98%EB%A9%B4-%EB%B0%B0%EC%97%B4%EC%9D%84-%EB%B0%98%ED%99%98%ED%95%98%EA%B3%A0-%EA%B7%B8-%EB%B0%B0%EC%97%B4%EC%9D%98-%EC%B2%AB%EB%B2%88%EC%A7%B8-%EC%9B%90%EC%86%8C%EB%8A%94-%EC%83%81%ED%83%9C-%EA%B0%92-%EB%91%90%EB%B2%88%EC%A7%B8-%EC%9B%90%EC%86%8C%EB%8A%94-%EC%83%81%ED%83%9C%EB%A5%BC-%EC%84%A4%EC%A0%95%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98%EC%9D%B4%EB%8B%A4-%EC%9D%B4-%ED%95%A8%EC%88%98%EC%97%90-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EB%A5%BC-%EB%84%A3%EC%96%B4%EC%84%9C-%ED%98%B8%EC%B6%9C%ED%95%98%EB%A9%B4-%EC%A0%84%EB%8B%AC%EB%B0%9B%EC%9D%80-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EB%A1%9C-%EA%B0%92%EC%9D%B4-%EB%B0%94%EB%80%8C%EA%B3%A0-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EA%B0%80-%EC%A0%95%EC%83%81%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%A6%AC%EB%A0%8C%EB%8D%94%EB%A7%81%EC%9D%B4-%EB%90%9C%EB%8B%A4\" aria-label=\"usestate 함수의 파라미터에는 상태의 기본값을 넣어준다 현재 0을 넣어 주었는데 기본값을 0으로 설정하겠다는 의미이다 이 함수가 호출되면 배열을 반환하고 그 배열의 첫번째 원소는 상태 값 두번째 원소는 상태를 설정하는 함수이다 이 함수에 파라미터를 넣어서 호출하면 전달받은 파라미터로 값이 바뀌고 컴포넌트가 정상적으로 리렌더링이 된다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useState 함수의 파라미터에는 상태의 기본값을 넣어준다 현재 0을 넣어 주었는데 기본값을 0으로 설정하겠다는 의미이다. 이 함수가 호출되면 배열을 반환하고 그 배열의 첫번째 원소는 상태 값, 두번째 원소는 상태를 설정하는 함수이다. 이 함수에 파라미터를 넣어서 호출하면 전달받은 파라미터로 값이 바뀌고 컴포넌트가 정상적으로 리렌더링이 된다.</h4>\n<h1 id=\"useeffect\"><a href=\"#useeffect\" aria-label=\"useeffect permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useEffect</h1>\n<h4 id=\"useeffect는-리액트-컴포넌트가-렌더링-될때마다-특정-작업을-수행하도록-설정할-수-있는-hook이다-클래스형-컴포넌트의-componentdidmount와-componentdidupdate를-합친-형태로-보아도-무방하다\"><a href=\"#useeffect%EB%8A%94-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EA%B0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EB%90%A0%EB%95%8C%EB%A7%88%EB%8B%A4-%ED%8A%B9%EC%A0%95-%EC%9E%91%EC%97%85%EC%9D%84-%EC%88%98%ED%96%89%ED%95%98%EB%8F%84%EB%A1%9D-%EC%84%A4%EC%A0%95%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-hook%EC%9D%B4%EB%8B%A4-%ED%81%B4%EB%9E%98%EC%8A%A4%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%9D%98-componentdidmount%EC%99%80-componentdidupdate%EB%A5%BC-%ED%95%A9%EC%B9%9C-%ED%98%95%ED%83%9C%EB%A1%9C-%EB%B3%B4%EC%95%84%EB%8F%84-%EB%AC%B4%EB%B0%A9%ED%95%98%EB%8B%A4\" aria-label=\"useeffect는 리액트 컴포넌트가 렌더링 될때마다 특정 작업을 수행하도록 설정할 수 있는 hook이다 클래스형 컴포넌트의 componentdidmount와 componentdidupdate를 합친 형태로 보아도 무방하다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useEffect는 리액트 컴포넌트가 렌더링 될때마다 특정 작업을 수행하도록 설정할 수 있는 Hook이다. 클래스형 컴포넌트의 componentDidMount와 componentDidUpdate를 합친 형태로 보아도 무방하다.</h4>\n<h2 id=\"마운트될-때만-실행하기\"><a href=\"#%EB%A7%88%EC%9A%B4%ED%8A%B8%EB%90%A0-%EB%95%8C%EB%A7%8C-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"마운트될 때만 실행하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마운트될 때만 실행하기</h2>\n<h4 id=\"useeffect에서-설정한-함수를-컴포넌트가-화면에-맨-처음-렌더링될-때만-실행하고-업데이트될-떄는-실행하지-않으려면-함수의-두-번째-파라미터로-비어있는-배열을-넣어주면-된다\"><a href=\"#useeffect%EC%97%90%EC%84%9C-%EC%84%A4%EC%A0%95%ED%95%9C-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EA%B0%80-%ED%99%94%EB%A9%B4%EC%97%90-%EB%A7%A8-%EC%B2%98%EC%9D%8C-%EB%A0%8C%EB%8D%94%EB%A7%81%EB%90%A0-%EB%95%8C%EB%A7%8C-%EC%8B%A4%ED%96%89%ED%95%98%EA%B3%A0-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%EB%90%A0-%EB%96%84%EB%8A%94-%EC%8B%A4%ED%96%89%ED%95%98%EC%A7%80-%EC%95%8A%EC%9C%BC%EB%A0%A4%EB%A9%B4-%ED%95%A8%EC%88%98%EC%9D%98-%EB%91%90-%EB%B2%88%EC%A7%B8-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EB%A1%9C-%EB%B9%84%EC%96%B4%EC%9E%88%EB%8A%94-%EB%B0%B0%EC%97%B4%EC%9D%84-%EB%84%A3%EC%96%B4%EC%A3%BC%EB%A9%B4-%EB%90%9C%EB%8B%A4\" aria-label=\"useeffect에서 설정한 함수를 컴포넌트가 화면에 맨 처음 렌더링될 때만 실행하고 업데이트될 떄는 실행하지 않으려면 함수의 두 번째 파라미터로 비어있는 배열을 넣어주면 된다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useEffect에서 설정한 함수를 컴포넌트가 화면에 맨 처음 렌더링될 때만 실행하고, 업데이트될 떄는 실행하지 않으려면 함수의 두 번째 파라미터로 비어있는 배열을 넣어주면 된다.</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'마운트될 때만 실행하기'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"개발자도구의-콘솔을-보면-처음에만-실행되는것을-확인할-수-있다\"><a href=\"#%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%8F%84%EA%B5%AC%EC%9D%98-%EC%BD%98%EC%86%94%EC%9D%84-%EB%B3%B4%EB%A9%B4-%EC%B2%98%EC%9D%8C%EC%97%90%EB%A7%8C-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94%EA%B2%83%EC%9D%84-%ED%99%95%EC%9D%B8%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"개발자도구의 콘솔을 보면 처음에만 실행되는것을 확인할 수 있다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발자도구의 콘솔을 보면 처음에만 실행되는것을 확인할 수 있다.</h4>\n<h2 id=\"특정-값이-업데이트될-때만-실행하고-싶을-때\"><a href=\"#%ED%8A%B9%EC%A0%95-%EA%B0%92%EC%9D%B4-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%EB%90%A0-%EB%95%8C%EB%A7%8C-%EC%8B%A4%ED%96%89%ED%95%98%EA%B3%A0-%EC%8B%B6%EC%9D%84-%EB%95%8C\" aria-label=\"특정 값이 업데이트될 때만 실행하고 싶을 때 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특정 값이 업데이트될 때만 실행하고 싶을 때</h2>\n<h4 id=\"useeffect를-사용할-때-특정-값이-변경될때만-호출하고-싶은-경우가-생길-수-있다-클래스형-컴포넌트라면-componentdidupdate를-사용하겠지만-useeffect에서-두-번째-파라미터로-전달되는-배열-안에-검사하고-싶은-값을-넣어-준다\"><a href=\"#useeffect%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8C-%ED%8A%B9%EC%A0%95-%EA%B0%92%EC%9D%B4-%EB%B3%80%EA%B2%BD%EB%90%A0%EB%95%8C%EB%A7%8C-%ED%98%B8%EC%B6%9C%ED%95%98%EA%B3%A0-%EC%8B%B6%EC%9D%80-%EA%B2%BD%EC%9A%B0%EA%B0%80-%EC%83%9D%EA%B8%B8-%EC%88%98-%EC%9E%88%EB%8B%A4-%ED%81%B4%EB%9E%98%EC%8A%A4%ED%98%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%9D%BC%EB%A9%B4-componentdidupdate%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B2%A0%EC%A7%80%EB%A7%8C-useeffect%EC%97%90%EC%84%9C-%EB%91%90-%EB%B2%88%EC%A7%B8-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EB%A1%9C-%EC%A0%84%EB%8B%AC%EB%90%98%EB%8A%94-%EB%B0%B0%EC%97%B4-%EC%95%88%EC%97%90-%EA%B2%80%EC%82%AC%ED%95%98%EA%B3%A0-%EC%8B%B6%EC%9D%80-%EA%B0%92%EC%9D%84-%EB%84%A3%EC%96%B4-%EC%A4%80%EB%8B%A4\" aria-label=\"useeffect를 사용할 때 특정 값이 변경될때만 호출하고 싶은 경우가 생길 수 있다 클래스형 컴포넌트라면 componentdidupdate를 사용하겠지만 useeffect에서 두 번째 파라미터로 전달되는 배열 안에 검사하고 싶은 값을 넣어 준다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useEffect를 사용할 때, 특정 값이 변경될때만 호출하고 싶은 경우가 생길 수 있다. 클래스형 컴포넌트라면 componentDidUpdate를 사용하겠지만 useEffect에서 두 번째 파라미터로 전달되는 배열 안에 검사하고 싶은 값을 넣어 준다,</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'재영'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>재영<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"배열-안에는-usestate를-통해-관리하고-있는-상태를-넣어주어도-되고-props로-전달받은-값을-넣어주어도-된다\"><a href=\"#%EB%B0%B0%EC%97%B4-%EC%95%88%EC%97%90%EB%8A%94-usestate%EB%A5%BC-%ED%86%B5%ED%95%B4-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B3%A0-%EC%9E%88%EB%8A%94-%EC%83%81%ED%83%9C%EB%A5%BC-%EB%84%A3%EC%96%B4%EC%A3%BC%EC%96%B4%EB%8F%84-%EB%90%98%EA%B3%A0-props%EB%A1%9C-%EC%A0%84%EB%8B%AC%EB%B0%9B%EC%9D%80-%EA%B0%92%EC%9D%84-%EB%84%A3%EC%96%B4%EC%A3%BC%EC%96%B4%EB%8F%84-%EB%90%9C%EB%8B%A4\" aria-label=\"배열 안에는 usestate를 통해 관리하고 있는 상태를 넣어주어도 되고 props로 전달받은 값을 넣어주어도 된다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 안에는 useState를 통해 관리하고 있는 상태를 넣어주어도 되고, props로 전달받은 값을 넣어주어도 된다…</h4>\n<h4 id=\"useeffect는-기본적으로-렌더링되고-난-직후마다-실행되며-두-번째-파라미터-배열에-무엇을-넣는지에-따라-실행되는-조건이-달라진다-컴포넌트가-언마운트되기-전이나-업데이트-되기-직전에-어떠한-작업을-수행하고-싶다면-useeffect에서-뒷정리clean-up함수를-반환해-주어야-한다\"><a href=\"#useeffect%EB%8A%94-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EB%A0%8C%EB%8D%94%EB%A7%81%EB%90%98%EA%B3%A0-%EB%82%9C-%EC%A7%81%ED%9B%84%EB%A7%88%EB%8B%A4-%EC%8B%A4%ED%96%89%EB%90%98%EB%A9%B0-%EB%91%90-%EB%B2%88%EC%A7%B8-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EB%B0%B0%EC%97%B4%EC%97%90-%EB%AC%B4%EC%97%87%EC%9D%84-%EB%84%A3%EB%8A%94%EC%A7%80%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%8B%A4%ED%96%89%EB%90%98%EB%8A%94-%EC%A1%B0%EA%B1%B4%EC%9D%B4-%EB%8B%AC%EB%9D%BC%EC%A7%84%EB%8B%A4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EA%B0%80-%EC%96%B8%EB%A7%88%EC%9A%B4%ED%8A%B8%EB%90%98%EA%B8%B0-%EC%A0%84%EC%9D%B4%EB%82%98-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8-%EB%90%98%EA%B8%B0-%EC%A7%81%EC%A0%84%EC%97%90-%EC%96%B4%EB%96%A0%ED%95%9C-%EC%9E%91%EC%97%85%EC%9D%84-%EC%88%98%ED%96%89%ED%95%98%EA%B3%A0-%EC%8B%B6%EB%8B%A4%EB%A9%B4-useeffect%EC%97%90%EC%84%9C-%EB%92%B7%EC%A0%95%EB%A6%ACclean-up%ED%95%A8%EC%88%98%EB%A5%BC-%EB%B0%98%ED%99%98%ED%95%B4-%EC%A3%BC%EC%96%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"useeffect는 기본적으로 렌더링되고 난 직후마다 실행되며 두 번째 파라미터 배열에 무엇을 넣는지에 따라 실행되는 조건이 달라진다 컴포넌트가 언마운트되기 전이나 업데이트 되기 직전에 어떠한 작업을 수행하고 싶다면 useeffect에서 뒷정리clean up함수를 반환해 주어야 한다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useEffect는 기본적으로 렌더링되고 난 직후마다 실행되며, 두 번째 파라미터 배열에 무엇을 넣는지에 따라 실행되는 조건이 달라진다. 컴포넌트가 언마운트되기 전이나 업데이트 되기 직전에 어떠한 작업을 수행하고 싶다면 useEffect에서 뒷정리(clean up)함수를 반환해 주어야 한다.</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'effect'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cleanup'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"렌더링될-때마다-뒷정리-함수가-계속-나타나는-것을-콘솔에서-확인할-수-있다-그리고-뒷정리-함수가-호출될-때는-업데이트되기-직전의-값을-보여준다-오직-언마운트될-때만-뒷정리-함수를-호출하고-싶다면-useeffect-함수의-두-번째-파라미터에-비어있는-배열을-놓으면-된다\"><a href=\"#%EB%A0%8C%EB%8D%94%EB%A7%81%EB%90%A0-%EB%95%8C%EB%A7%88%EB%8B%A4-%EB%92%B7%EC%A0%95%EB%A6%AC-%ED%95%A8%EC%88%98%EA%B0%80-%EA%B3%84%EC%86%8D-%EB%82%98%ED%83%80%EB%82%98%EB%8A%94-%EA%B2%83%EC%9D%84-%EC%BD%98%EC%86%94%EC%97%90%EC%84%9C-%ED%99%95%EC%9D%B8%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EB%92%B7%EC%A0%95%EB%A6%AC-%ED%95%A8%EC%88%98%EA%B0%80-%ED%98%B8%EC%B6%9C%EB%90%A0-%EB%95%8C%EB%8A%94-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8%EB%90%98%EA%B8%B0-%EC%A7%81%EC%A0%84%EC%9D%98-%EA%B0%92%EC%9D%84-%EB%B3%B4%EC%97%AC%EC%A4%80%EB%8B%A4-%EC%98%A4%EC%A7%81-%EC%96%B8%EB%A7%88%EC%9A%B4%ED%8A%B8%EB%90%A0-%EB%95%8C%EB%A7%8C-%EB%92%B7%EC%A0%95%EB%A6%AC-%ED%95%A8%EC%88%98%EB%A5%BC-%ED%98%B8%EC%B6%9C%ED%95%98%EA%B3%A0-%EC%8B%B6%EB%8B%A4%EB%A9%B4-useeffect-%ED%95%A8%EC%88%98%EC%9D%98-%EB%91%90-%EB%B2%88%EC%A7%B8-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EC%97%90-%EB%B9%84%EC%96%B4%EC%9E%88%EB%8A%94-%EB%B0%B0%EC%97%B4%EC%9D%84-%EB%86%93%EC%9C%BC%EB%A9%B4-%EB%90%9C%EB%8B%A4\" aria-label=\"렌더링될 때마다 뒷정리 함수가 계속 나타나는 것을 콘솔에서 확인할 수 있다 그리고 뒷정리 함수가 호출될 때는 업데이트되기 직전의 값을 보여준다 오직 언마운트될 때만 뒷정리 함수를 호출하고 싶다면 useeffect 함수의 두 번째 파라미터에 비어있는 배열을 놓으면 된다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렌더링될 때마다 뒷정리 함수가 계속 나타나는 것을 콘솔에서 확인할 수 있다. 그리고 뒷정리 함수가 호출될 때는 업데이트되기 직전의 값을 보여준다. 오직 언마운트될 때만 뒷정리 함수를 호출하고 싶다면 useEffect 함수의 두 번째 파라미터에 비어있는 배열을 놓으면 된다.</h4>","fields":{"slug":"/posts/react-hooks/","tagSlugs":["/tag/react/"]},"frontmatter":{"date":"2020-01-05T10:43:32.169Z","description":"리액트 훅스","tags":["react"],"title":"React-hooks"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/react-hooks/"}}}