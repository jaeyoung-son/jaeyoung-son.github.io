{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/styled-component/","result":{"data":{"markdownRemark":{"id":"9e81a43b-823c-5d1e-88c6-671a9b6ca5d7","html":"<h1 id=\"styledcomponent\"><a href=\"#styledcomponent\" aria-label=\"styledcomponent permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StyledComponent</h1>\n<h3 id=\"스타일드-컴포넌트는-자바스크립트-파일-안에-스타일을-선언하는-방식이다-이-방식을-css-in-js라고-부르며-스타일드컴포넌트-이모션등이-대표적이다\"><a href=\"#%EC%8A%A4%ED%83%80%EC%9D%BC%EB%93%9C-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%8A%94-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%8C%8C%EC%9D%BC-%EC%95%88%EC%97%90-%EC%8A%A4%ED%83%80%EC%9D%BC%EC%9D%84-%EC%84%A0%EC%96%B8%ED%95%98%EB%8A%94-%EB%B0%A9%EC%8B%9D%EC%9D%B4%EB%8B%A4-%EC%9D%B4-%EB%B0%A9%EC%8B%9D%EC%9D%84-css-in-js%EB%9D%BC%EA%B3%A0-%EB%B6%80%EB%A5%B4%EB%A9%B0-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%93%9C%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%9D%B4%EB%AA%A8%EC%85%98%EB%93%B1%EC%9D%B4-%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B4%EB%8B%A4\" aria-label=\"스타일드 컴포넌트는 자바스크립트 파일 안에 스타일을 선언하는 방식이다 이 방식을 css in js라고 부르며 스타일드컴포넌트 이모션등이 대표적이다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타일드 컴포넌트는 자바스크립트 파일 안에 스타일을 선언하는 방식이다. 이 방식을 ‘CSS-in-JS’라고 부르며 스타일드컴포넌트 이모션등이 대표적이다.</h3>\n<h2 id=\"tagged-템플릿-리터럴\"><a href=\"#tagged-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"tagged 템플릿 리터럴 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tagged 템플릿 리터럴</h2>\n<h4 id=\"스타일을-작성할-때-백틱을-사용하여-만든-문자열에-스타일-정보를-넣어준다-여기서-사용한-문법을-tagged-템플릿-리터럴이라고-부른다-일반-템플릿-리터럴과-다른점은-템플릿-안에-자바스크립트-객체나-함수를-전달할-때-온전히-추출할-수-있다는것이다\"><a href=\"#%EC%8A%A4%ED%83%80%EC%9D%BC%EC%9D%84-%EC%9E%91%EC%84%B1%ED%95%A0-%EB%95%8C-%EB%B0%B1%ED%8B%B1%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EB%A7%8C%EB%93%A0-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%97%90-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%A0%95%EB%B3%B4%EB%A5%BC-%EB%84%A3%EC%96%B4%EC%A4%80%EB%8B%A4-%EC%97%AC%EA%B8%B0%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%AC%B8%EB%B2%95%EC%9D%84-tagged-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4%EC%9D%B4%EB%9D%BC%EA%B3%A0-%EB%B6%80%EB%A5%B8%EB%8B%A4-%EC%9D%BC%EB%B0%98-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4%EA%B3%BC-%EB%8B%A4%EB%A5%B8%EC%A0%90%EC%9D%80-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%95%88%EC%97%90-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9D%EC%B2%B4%EB%82%98-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%A0%84%EB%8B%AC%ED%95%A0-%EB%95%8C-%EC%98%A8%EC%A0%84%ED%9E%88-%EC%B6%94%EC%B6%9C%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4%EB%8A%94%EA%B2%83%EC%9D%B4%EB%8B%A4\" aria-label=\"스타일을 작성할 때 백틱을 사용하여 만든 문자열에 스타일 정보를 넣어준다 여기서 사용한 문법을 tagged 템플릿 리터럴이라고 부른다 일반 템플릿 리터럴과 다른점은 템플릿 안에 자바스크립트 객체나 함수를 전달할 때 온전히 추출할 수 있다는것이다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타일을 작성할 때 (백틱)을 사용하여 만든 문자열에 스타일 정보를 넣어준다. 여기서 사용한 문법을 Tagged 템플릿 리터럴이라고 부른다. 일반 템플릿 리터럴과 다른점은 템플릿 안에 자바스크립트 객체나 함수를 전달할 때 온전히 추출할 수 있다는것이다.</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> JyComponent <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\tfont-size: 2rem;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"스타일드-컴포넌트를-사용하여-스타일링-된-엘리먼트를-만들-때는-컴포넌트-파일의-상단에서-styled를-불러오고-styled태그명을-사용하여-구현한다\"><a href=\"#%EC%8A%A4%ED%83%80%EC%9D%BC%EB%93%9C-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81-%EB%90%9C-%EC%97%98%EB%A6%AC%EB%A8%BC%ED%8A%B8%EB%A5%BC-%EB%A7%8C%EB%93%A4-%EB%95%8C%EB%8A%94-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%83%81%EB%8B%A8%EC%97%90%EC%84%9C-styled%EB%A5%BC-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B3%A0-styled%ED%83%9C%EA%B7%B8%EB%AA%85%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B5%AC%ED%98%84%ED%95%9C%EB%8B%A4\" aria-label=\"스타일드 컴포넌트를 사용하여 스타일링 된 엘리먼트를 만들 때는 컴포넌트 파일의 상단에서 styled를 불러오고 styled태그명을 사용하여 구현한다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타일드 컴포넌트를 사용하여 스타일링 된 엘리먼트를 만들 때는 컴포넌트 파일의 상단에서 styled를 불러오고, styled.태그명을 사용하여 구현한다.</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> JyInput <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\tbacground: red;\nconst STyledLink = styled(Link)</span><span class=\"token template-punctuation string\">`</span></span>\n\tcolor<span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n`</code></pre></div>\n<h4 id=\"사용해야-할-태그명이-유동적이거나-특정-컴포넌트-자체에-스타일링-해-주고-싶다면-이와같이-구현한다\"><a href=\"#%EC%82%AC%EC%9A%A9%ED%95%B4%EC%95%BC-%ED%95%A0-%ED%83%9C%EA%B7%B8%EB%AA%85%EC%9D%B4-%EC%9C%A0%EB%8F%99%EC%A0%81%EC%9D%B4%EA%B1%B0%EB%82%98-%ED%8A%B9%EC%A0%95-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%9E%90%EC%B2%B4%EC%97%90-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81-%ED%95%B4-%EC%A3%BC%EA%B3%A0-%EC%8B%B6%EB%8B%A4%EB%A9%B4-%EC%9D%B4%EC%99%80%EA%B0%99%EC%9D%B4-%EA%B5%AC%ED%98%84%ED%95%9C%EB%8B%A4\" aria-label=\"사용해야 할 태그명이 유동적이거나 특정 컴포넌트 자체에 스타일링 해 주고 싶다면 이와같이 구현한다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용해야 할 태그명이 유동적이거나 특정 컴포넌트 자체에 스타일링 해 주고 싶다면 이와같이 구현한다.</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> styled<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> css <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span></code></pre></div>\n<h4 id=\"위처럼-단순-변수의-형태가-아니라-여러줄의-스타일-구문을-조건부로-설정해야-하는-경우에는-styled뿐만-아니라-css를-불러와야-한다-중요\"><a href=\"#%EC%9C%84%EC%B2%98%EB%9F%BC-%EB%8B%A8%EC%88%9C-%EB%B3%80%EC%88%98%EC%9D%98-%ED%98%95%ED%83%9C%EA%B0%80-%EC%95%84%EB%8B%88%EB%9D%BC-%EC%97%AC%EB%9F%AC%EC%A4%84%EC%9D%98-%EC%8A%A4%ED%83%80%EC%9D%BC-%EA%B5%AC%EB%AC%B8%EC%9D%84-%EC%A1%B0%EA%B1%B4%EB%B6%80%EB%A1%9C-%EC%84%A4%EC%A0%95%ED%95%B4%EC%95%BC-%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0%EC%97%90%EB%8A%94-styled%EB%BF%90%EB%A7%8C-%EC%95%84%EB%8B%88%EB%9D%BC-css%EB%A5%BC-%EB%B6%88%EB%9F%AC%EC%99%80%EC%95%BC-%ED%95%9C%EB%8B%A4-%EC%A4%91%EC%9A%94\" aria-label=\"위처럼 단순 변수의 형태가 아니라 여러줄의 스타일 구문을 조건부로 설정해야 하는 경우에는 styled뿐만 아니라 css를 불러와야 한다 중요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>위처럼 단순 변수의 형태가 아니라 여러줄의 스타일 구문을 조건부로 설정해야 하는 경우에는 styled뿐만 아니라 css를 불러와야 한다 중요!!</h4>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">&amp;:hover</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 255<span class=\"token punctuation\">,</span> 0.9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"문자를-사용하여-sass처럼-자기-자신-선택-가능\"><a href=\"#%EB%AC%B8%EC%9E%90%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-sass%EC%B2%98%EB%9F%BC-%EC%9E%90%EA%B8%B0-%EC%9E%90%EC%8B%A0-%EC%84%A0%ED%83%9D-%EA%B0%80%EB%8A%A5\" aria-label=\"문자를 사용하여 sass처럼 자기 자신 선택 가능 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x26;문자를 사용하여 sass처럼 자기 자신 선택 가능</h4>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">$</span><span class=\"token punctuation\">{</span>props => props.inverted &amp;&amp; css`\n    <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 2px solid white<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token selector\">;\n    &amp;:hover</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span>\n      <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  `<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">안녕하세요</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">inverted</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">재영하이</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h4 id=\"스타일-코드-여러-줄을-props에-따라-넣어-주어야-할-떄는-css를-styled-components에서-불러와야-한다-css를-사용하지-않고-작동-하기는-하나-해당-내용이-그저-문자열로만-취급되기-때문에-신택스-하이라이팅이-제대로-이루어지지-않고-tagged템플릿-리터럴이-아니기-때문에-함수를-받아-사용하지-못해-해당-부분에서는-props값을-사용하지-못한다-props를-참조한다면-반드시-css로-감싸주어서-tagged-템플릿-리터럴을-사용해주어야-한다\"><a href=\"#%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%BD%94%EB%93%9C-%EC%97%AC%EB%9F%AC-%EC%A4%84%EC%9D%84-props%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%84%A3%EC%96%B4-%EC%A3%BC%EC%96%B4%EC%95%BC-%ED%95%A0-%EB%96%84%EB%8A%94-css%EB%A5%BC-styled-components%EC%97%90%EC%84%9C-%EB%B6%88%EB%9F%AC%EC%99%80%EC%95%BC-%ED%95%9C%EB%8B%A4-css%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EA%B3%A0-%EC%9E%91%EB%8F%99-%ED%95%98%EA%B8%B0%EB%8A%94-%ED%95%98%EB%82%98-%ED%95%B4%EB%8B%B9-%EB%82%B4%EC%9A%A9%EC%9D%B4-%EA%B7%B8%EC%A0%80-%EB%AC%B8%EC%9E%90%EC%97%B4%EB%A1%9C%EB%A7%8C-%EC%B7%A8%EA%B8%89%EB%90%98%EA%B8%B0-%EB%95%8C%EB%AC%B8%EC%97%90-%EC%8B%A0%ED%83%9D%EC%8A%A4-%ED%95%98%EC%9D%B4%EB%9D%BC%EC%9D%B4%ED%8C%85%EC%9D%B4-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%9D%B4%EB%A3%A8%EC%96%B4%EC%A7%80%EC%A7%80-%EC%95%8A%EA%B3%A0-tagged%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4%EC%9D%B4-%EC%95%84%EB%8B%88%EA%B8%B0-%EB%95%8C%EB%AC%B8%EC%97%90-%ED%95%A8%EC%88%98%EB%A5%BC-%EB%B0%9B%EC%95%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EB%AA%BB%ED%95%B4-%ED%95%B4%EB%8B%B9-%EB%B6%80%EB%B6%84%EC%97%90%EC%84%9C%EB%8A%94-props%EA%B0%92%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EB%AA%BB%ED%95%9C%EB%8B%A4-props%EB%A5%BC-%EC%B0%B8%EC%A1%B0%ED%95%9C%EB%8B%A4%EB%A9%B4-%EB%B0%98%EB%93%9C%EC%8B%9C-css%EB%A1%9C-%EA%B0%90%EC%8B%B8%EC%A3%BC%EC%96%B4%EC%84%9C-tagged-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%A3%BC%EC%96%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"스타일 코드 여러 줄을 props에 따라 넣어 주어야 할 떄는 css를 styled components에서 불러와야 한다 css를 사용하지 않고 작동 하기는 하나 해당 내용이 그저 문자열로만 취급되기 때문에 신택스 하이라이팅이 제대로 이루어지지 않고 tagged템플릿 리터럴이 아니기 때문에 함수를 받아 사용하지 못해 해당 부분에서는 props값을 사용하지 못한다 props를 참조한다면 반드시 css로 감싸주어서 tagged 템플릿 리터럴을 사용해주어야 한다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타일 코드 여러 줄을 props에 따라 넣어 주어야 할 떄는 CSS를 styled-components에서 불러와야 한다. CSS를 사용하지 않고 작동 하기는 하나 해당 내용이 그저 문자열로만 취급되기 때문에 신택스 하이라이팅이 제대로 이루어지지 않고 Tagged템플릿 리터럴이 아니기 때문에 함수를 받아 사용하지 못해 해당 부분에서는 props값을 사용하지 못한다. props를 참조한다면 반드시 CSS로 감싸주어서 Tagged 템플릿 리터럴을 사용해주어야 한다.</h4>\n<h3 id=\"이해하기-어려운-코드-다시-봐야함\"><a href=\"#%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%EC%96%B4%EB%A0%A4%EC%9A%B4-%EC%BD%94%EB%93%9C-%EB%8B%A4%EC%8B%9C-%EB%B4%90%EC%95%BC%ED%95%A8\" aria-label=\"이해하기 어려운 코드 다시 봐야함 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이해하기 어려운 코드 (다시 봐야함)</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> sizes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  desktop<span class=\"token punctuation\">:</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span>\n  tablet<span class=\"token punctuation\">:</span> <span class=\"token number\">768</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">const</span> media <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>sizes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> labe</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  acc<span class=\"token punctuation\">[</span>label<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> css<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\t@media (max-width: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sizes<span class=\"token punctuation\">[</span>label<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">16</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">em)\n{\n\t</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n}\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> acc<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"미디어쿼리를-미리-정의해준다\"><a href=\"#%EB%AF%B8%EB%94%94%EC%96%B4%EC%BF%BC%EB%A6%AC%EB%A5%BC-%EB%AF%B8%EB%A6%AC-%EC%A0%95%EC%9D%98%ED%95%B4%EC%A4%80%EB%8B%A4\" aria-label=\"미디어쿼리를 미리 정의해준다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미디어쿼리를 미리 정의해준다</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> Box <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\tbackground: ...\n...\n...\n\t</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>media<span class=\"token punctuation\">.</span>desktop<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">width:768px;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\n\t$(media.tablet</span><span class=\"token template-punctuation string\">`</span></span>width<span class=\"token punctuation\">:</span><span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">};\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/posts/styled-component/","tagSlugs":["/tag/styled-component/"]},"frontmatter":{"date":"2020-01-06T10:43:32.169Z","description":"스타일드 컴포넌트 적용","tags":["styled_component"],"title":"Styled_component"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/styled-component/"}}}