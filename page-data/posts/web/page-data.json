{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/web/","result":{"data":{"markdownRemark":{"id":"6f91fbeb-6f38-5e59-bf19-2de39c6c7d48","html":"<p>HTTP 와 RESTful JWT 에 관해 학습 및 정리</p>\n<h2 id=\"http\"><a href=\"#http\" aria-label=\"http permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP</h2>\n<p>Hyper Text Transfer Protocol<br>\n하이퍼텍스트(HTML) 문서를 교환하기 위해 만들어진 통신규약이다. 즉 웹상에서 네트워크로 서버끼리 통신을 할때 어떠한 형식으로 통신을 하자고 규정해놓은 통신 형식 또는 통신 구조이다.</p>\n<h3 id=\"핵심요소\"><a href=\"#%ED%95%B5%EC%8B%AC%EC%9A%94%EC%86%8C\" aria-label=\"핵심요소 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핵심요소</h3>\n<ul>\n<li>통신방식\nHTTP의 통신방식은 기본적으로 요청/응답 구조로 되어있다.<br>\n클라이언트가 HTTP request를 서버에 보내면 서버는 HTTP response를 보내는 구조.<br>\nHTTP는 stateless 이다.<br>\nstateless란 말 그대로 상태를 저장하지 않는다. 요청이 오면 그에 응답을 할 뿐, 여러 요청/응답끼리 연결되어 있지 않다. 독립적이다.</li>\n<li>\n<p>Request 구조</p>\n<h4 id=\"start-line\"><a href=\"#start-line\" aria-label=\"start line permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>start line</h4>\n<p>말 그대로 HTTP request의 첫 라인 start line 또한 3부분으로 구성되어 있다.<br>\nHTTP Method<br>\nrequest가 의도한 action을 정의하는 부분.<br>\nget,post,put,delete,options 등이 있으며 주로 get 과 Post가 쓰인다. request target<br>\n요청이 전송되는 목표 uri 예를들어 /login<br>\nHTTP Version<br>\n말 그대로 버전 1.0, 1.1, 2.0</p>\n<h4 id=\"headers\"><a href=\"#headers\" aria-label=\"headers permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>headers</h4>\n<p>해당 요청에 대한 추가 정보를 담고 있는 부분.\nkey : value 값으로 되어있다.<br>\n자주 사용되는 headers 정보</p>\n<ul>\n<li>Host\n요청이 전송되는 target의 host uri: 예를들어 google.com</li>\n<li>User-Agent\n요청을 보내는 클라이언트에 대한 정보 예를들어 웹브라우저에 대한 정보</li>\n<li>Accept\n해당 요청이 받을 수 있는 응답 타입</li>\n<li>Connection\n해당 요청이 끝난 후 클라이언트와 서버가 계속 네트워크 커넥션을 유지할지 끊을지 지시</li>\n<li>Content-Type\n해당 요청이 보내는 메시지 body의 타입 예 application/json</li>\n<li>\n<p>Content-Length\n메시지 body의 길이</p>\n<h3 id=\"body\"><a href=\"#body\" aria-label=\"body permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Body</h3>\n<p>해당 request의 실제 메시지/내용 이며 body가 없는 request도 많다. get 요청들은 대부분 바디가 없다.</p>\n</li>\n<li>\n<p>Response 구조</p>\n<h4 id=\"status-linre\"><a href=\"#status-linre\" aria-label=\"status linre permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>status linre</h4>\n<p>response의 상태를 간략하게 나타내주는 부분</p>\n<h4 id=\"headers-1\"><a href=\"#headers-1\" aria-label=\"headers 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>headers</h4>\n<p>request의 headers와 거의 동일하며 response에서만 사용되는 header값들이 있다. 예 user-agent 대신 server</p>\n<h4 id=\"body-1\"><a href=\"#body-1\" aria-label=\"body 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>body</h4>\n<p>request의 body와 동일하다. 모든 응답에 body가 있지 않다.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"restful\"><a href=\"#restful\" aria-label=\"restful permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RESTful</h2>\n<p>resful을 알기전 알아두면 좋은 배경지식!</p>\n<ul>\n<li>URI\nUniform Resourece Identifier 의 약자이다.<br>\n해당 사이트의 특정 자원의 위치를 나타내는 유일한 주소<br>\n/login, /news</li>\n<li>payload\nhttp request에서 보내는 데이터.</li>\n</ul>\n<h3 id=\"representational-state-transfer\"><a href=\"#representational-state-transfer\" aria-label=\"representational state transfer permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>REpresentational State Transfer</h3>\n<p>웹상에서 사용되는 여러 리소스를 http uri로 표현하고 그 리소스에 대한 행위를 http method로 정의하는 방식이다.<br>\n즉 리소스(http uri로 정의된)를 어떻게 한다 (http method + payload)를 구조적으로 깔끔하게 표현하는것.</p>\n<h3 id=\"restful-api의-장점\"><a href=\"#restful-api%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"restful api의 장점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RESTful API의 장점</h3>\n<ul>\n<li>가장 명확한 장점은 바로 self-descriptiveness 셀프 서술</li>\n<li>restful api는 그 자체만으로 api의 목적이 쉽게 이해가 된다.</li>\n</ul>\n<h3 id=\"restful-개발시-유의점\"><a href=\"#restful-%EA%B0%9C%EB%B0%9C%EC%8B%9C-%EC%9C%A0%EC%9D%98%EC%A0%90\" aria-label=\"restful 개발시 유의점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>restful 개발시 유의점</h3>\n<ul>\n<li>/슬래시 는 계층관계를 나타낼때 사용된다.</li>\n<li>URI에 _언더바는 주로 쓰지 않고 대문자보다 소문자를 쓴다 긴단어도 사용안한다. 가독성을위해</li>\n<li>URI는 명사를 사용 HTTP method에서 동사의미를 표현</li>\n</ul>\n<h2 id=\"jwt\"><a href=\"#jwt\" aria-label=\"jwt permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JWT</h2>\n<p>JWT 란 JSON Web Token 의 약자이며 웹표준 으로서 두 개체에서 JSON객체를 사용하여 가볍고 자가수용적인 방식으로 정보를 안정성 있게 전달해준다.<br>\n대부분의 주로 사용되는 프로그래밍 언어에서 지원이 되며 JWT는 HTTP 헤더에 넣어서 전달 할 수 있고, URL의 파라미터로 손쉽게 전달될 수 있다.</p>\n<h3 id=\"어느-상황에서-jwt를-사용할까\"><a href=\"#%EC%96%B4%EB%8A%90-%EC%83%81%ED%99%A9%EC%97%90%EC%84%9C-jwt%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C\" aria-label=\"어느 상황에서 jwt를 사용할까 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어느 상황에서 JWT를 사용할까</h3>\n<ul>\n<li>회원 인증: 주로 JWT는 로그인을 하면 서버는 유저에게 토큰을 발급하고 그 후 유저가 서버에 요청을 할 때 마다 JWT를 포함하여 전달한다. 서버가 클라이언트에게 요청을 받을때 마다, 토큰이 유효하고 인증됐는지 검증하고 권한이 있는지 확인한다.</li>\n<li>정보 교류: JWT는 두 개체 사이에서 안정성있게 정보를 교환하기에 좋은 방법이다. 그 이유는 정보가 sign이 되어있기 때문.</li>\n</ul>\n<h3 id=\"jwt의-구조\"><a href=\"#jwt%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-label=\"jwt의 구조 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JWT의 구조</h3>\n<p>JWT는 .을 구분으로 3가지의 문자열로 되어있다.</p>\n<ul>\n<li>header\n헤더는 두가지의 정보를 지니고 있다.<br>\ntype: 토큰의 타입을 지정한다. JWT<br>\nalg: 해싱 알고리즘을 지정한다. 보통 HMAC SHA256 또는 RSA 알고리즘은 토큰을 검증할 때 사용되는 signature 부분에서 사용된다.</li>\n<li>payload\npayload부분에는 토큰에 담을 정보가 들어있다. 여기에 담는 정보의 한 조각을 클레임이라고 부르고 이는 nane/value의 한 쌍으로 이루어져있다.</li>\n<li>signature 서명\n서명은 헤더의 인코딩값과 정보의 인코딩값을 합친 후 비밀키로 해쉬를 하여 생성힌다.</li>\n</ul>","fields":{"slug":"/posts/web/","tagSlugs":["/tag/web/"]},"frontmatter":{"date":"2020-03-17T12:10:32.169Z","description":"http restful jwt","tags":["web"],"title":"http, restful, jwt"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/web/"}}}